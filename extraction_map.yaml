# Oracle Phase C Extraction Map
# File → Target Crate mapping for complete module extraction
# Dependency Rules: game_core ← gameplay_sim ← gameplay_render ← gameplay_ui
# Target Crates:
#   - game_core: Pure data/serialization/helpers
#   - gameplay_sim: World & physics logic
#   - gameplay_render: Meshes/materials/screen-space fx
#   - gameplay_ui: Menus/HUD/debug overlays

# ===== GAME_CORE (Pure Data/Serialization/Helpers) =====
game_core:
  # Core game state and configuration
  - file: game_bin/src/game_state.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: state
    reason: "Core game state enum - pure data structure"
  
  - file: game_bin/src/constants.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: constants
    reason: "Physics constants and collision groups"
  
  # Configuration system (pure data)
  - file: game_bin/src/config/mod.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: config
    reason: "Configuration module organization"
  
  - file: game_bin/src/config/game_config.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: config::game_config
    reason: "Main configuration data structures"
  
  - file: game_bin/src/config/performance_config.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: config::performance_config
    reason: "Performance configuration data"
  
  - file: game_bin/src/config/vehicle_config.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: config::vehicle_config
    reason: "Vehicle configuration data"
  
  - file: game_bin/src/config/assets.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: config::assets
    reason: "Asset configuration paths"
  
  # Pure data components
  - file: game_bin/src/components/player.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::player
    reason: "Player data components (serializable)"
  
  - file: game_bin/src/components/vehicles.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::vehicles
    reason: "Vehicle data components (serializable)"
  
  - file: game_bin/src/components/world.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::world
    reason: "World data components (serializable)"
  
  - file: game_bin/src/components/effects.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::effects
    reason: "Effect data components (serializable)"
  
  - file: game_bin/src/components/water.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::water
    reason: "Water data components (serializable)"
  
  - file: game_bin/src/components/lod.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::lod
    reason: "LOD data components (serializable)"
  
  - file: game_bin/src/components/realistic_vehicle.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::realistic_vehicle
    reason: "Realistic vehicle data components"
  
  - file: game_bin/src/components/dirty_flags.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::dirty_flags
    reason: "Dirty flag data components"
  
  - file: game_bin/src/components/instanced_vegetation.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components::instanced_vegetation
    reason: "Vegetation instancing data components"
  
  - file: game_bin/src/components/mod.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: components
    reason: "Component module organization"
  
  # Bundles (pure data composition)
  - file: game_bin/src/bundles.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: bundles
    reason: "Component bundles - pure data composition"
  
  # Serialization/persistence data
  - file: game_bin/src/systems/persistence/mod.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: persistence
    reason: "Persistence module organization"
  
  - file: game_bin/src/systems/persistence/save_system.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: persistence::save_system
    reason: "Save system - pure data serialization"
  
  - file: game_bin/src/systems/persistence/load_system.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: persistence::load_system
    reason: "Load system - pure data deserialization"
  
  # Core services (data/config only)
  - file: game_bin/src/services/simple_services.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: services::simple_services
    reason: "Simple services - configuration and data utilities"
  
  - file: game_bin/src/services/mod.rs
    target_crate: game_core
    bevy_dependency: true
    module_path: services
    reason: "Services module organization"

# ===== GAMEPLAY_SIM (World & Physics Logic) =====
gameplay_sim:
  # Physics systems
  - file: game_bin/src/systems/physics_utils.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: physics::utilities
    reason: "Physics utilities and validation"
  
  - file: game_bin/src/systems/parallel_physics.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: physics::parallel_physics
    reason: "Parallel physics processing"
  
  - file: game_bin/src/systems/realistic_physics_safeguards.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: physics::safeguards
    reason: "Physics safeguards and validation"
  
  - file: game_bin/src/systems/player_collision_resolution.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: physics::collision_resolution
    reason: "Player collision resolution"
  
  # Movement systems
  - file: game_bin/src/systems/movement/mod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement
    reason: "Movement systems module organization"
  
  - file: game_bin/src/systems/movement/player.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::player
    reason: "Player movement logic"
  
  - file: game_bin/src/systems/movement/vehicles.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::vehicles
    reason: "Vehicle movement logic"
  
  - file: game_bin/src/systems/movement/aircraft.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::aircraft
    reason: "Aircraft movement logic"
  
  - file: game_bin/src/systems/movement/realistic_vehicle_physics.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::realistic_vehicle_physics
    reason: "Realistic vehicle physics"
  
  - file: game_bin/src/systems/movement/realistic_vehicle_physics_core.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::realistic_vehicle_physics_core
    reason: "Core realistic vehicle physics"
  
  - file: game_bin/src/systems/movement/realistic_vehicle_input.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::realistic_vehicle_input
    reason: "Realistic vehicle input processing"
  
  - file: game_bin/src/systems/movement/supercar_physics.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::supercar_physics
    reason: "Supercar physics simulation"
  
  - file: game_bin/src/systems/movement/supercar_input.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::supercar_input
    reason: "Supercar input processing"
  
  - file: game_bin/src/systems/movement/supercar_effects.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::supercar_effects
    reason: "Supercar physics effects"
  
  - file: game_bin/src/systems/movement/vehicle_sets.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: movement::vehicle_sets
    reason: "Vehicle system sets"
  
  # World simulation
  - file: game_bin/src/systems/world/mod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world
    reason: "World systems module organization"
  
  - file: game_bin/src/systems/world/unified_world.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::unified_world
    reason: "Unified world generation and management"
  
  - file: game_bin/src/systems/world/dynamic_content.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::dynamic_content
    reason: "Dynamic content spawning logic"
  
  - file: game_bin/src/systems/world/infinite_streaming.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::infinite_streaming
    reason: "Infinite world streaming"
  
  - file: game_bin/src/systems/world/layered_generation.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::layered_generation
    reason: "Layered world generation"
  
  - file: game_bin/src/systems/world/road_generation.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::road_generation
    reason: "Road generation logic"
  
  - file: game_bin/src/systems/world/road_network.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::road_network
    reason: "Road network management"
  
  - file: game_bin/src/systems/world/road_mesh.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::road_mesh
    reason: "Road mesh generation"
  
  - file: game_bin/src/systems/world/map_system.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::map_system
    reason: "Map system logic"
  
  - file: game_bin/src/systems/world/npc.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::npc
    reason: "NPC logic and behavior"
  
  - file: game_bin/src/systems/world/npc_spawn.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::npc_spawn
    reason: "NPC spawning logic"
  
  - file: game_bin/src/systems/world/npc_lod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::npc_lod
    reason: "NPC LOD management"
  
  - file: game_bin/src/systems/world/vegetation_lod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::vegetation_lod
    reason: "Vegetation LOD logic"
  
  - file: game_bin/src/systems/world/unified_lod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::unified_lod
    reason: "Unified LOD management"
  
  # Behavior systems
  - file: game_bin/src/systems/human_behavior.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: behavior::human_behavior
    reason: "Human behavior simulation"
  
  - file: game_bin/src/systems/interaction.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: behavior::interaction
    reason: "Entity interaction logic"
  
  # Input processing
  - file: game_bin/src/systems/input/mod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: input
    reason: "Input systems module organization"
  
  - file: game_bin/src/systems/input/control_manager.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: input::control_manager
    reason: "Control manager logic"
  
  - file: game_bin/src/systems/input/input_manager.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: input::input_manager
    reason: "Input manager logic"
  
  - file: game_bin/src/systems/input/input_config.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: input::input_config
    reason: "Input configuration"
  
  - file: game_bin/src/systems/input/vehicle_control_config.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: input::vehicle_control_config
    reason: "Vehicle control configuration"
  
  # Entity creation and management
  - file: game_bin/src/systems/entity_creation_system.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: entity_creation
    reason: "Entity creation logic"
  
  - file: game_bin/src/systems/spawn_validation.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: spawn_validation
    reason: "Spawn validation logic"
  
  - file: game_bin/src/systems/transform_sync.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: transform_sync
    reason: "Transform synchronization"
  
  # Distance and culling (simulation logic)
  - file: game_bin/src/systems/unified_distance_calculator.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: distance::unified_distance_calculator
    reason: "Distance calculation logic"
  
  - file: game_bin/src/systems/world/unified_distance_culling.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::unified_distance_culling
    reason: "Distance culling logic"
  
  - file: game_bin/src/systems/world/culling.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: world::culling
    reason: "World culling logic"
  
  # Ground detection service
  - file: game_bin/src/services/ground_detection.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: services::ground_detection
    reason: "Ground detection service"
  
  # Water simulation
  - file: game_bin/src/systems/water.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: water
    reason: "Water simulation logic"
  
  # LOD systems
  - file: game_bin/src/systems/lod/mod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: lod
    reason: "LOD systems module organization"
  
  - file: game_bin/src/systems/lod/modern_lod_system.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: lod::modern_lod_system
    reason: "Modern LOD system logic"
  
  - file: game_bin/src/systems/vehicles/mod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: vehicles
    reason: "Vehicle systems module organization"
  
  - file: game_bin/src/systems/vehicles/lod_manager.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: vehicles::lod_manager
    reason: "Vehicle LOD management"
  
  # Setup systems (world initialization)
  - file: game_bin/src/setup/mod.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup
    reason: "Setup systems module organization"
  
  - file: game_bin/src/setup/world.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup::world
    reason: "World setup logic"
  
  - file: game_bin/src/setup/vehicles.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup::vehicles
    reason: "Vehicle setup logic"
  
  - file: game_bin/src/setup/environment.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup::environment
    reason: "Environment setup logic"
  
  - file: game_bin/src/setup/unified_vehicles.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup::unified_vehicles
    reason: "Unified vehicle setup logic"
  
  - file: game_bin/src/setup/unified_npcs.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup::unified_npcs
    reason: "Unified NPC setup logic"
  
  - file: game_bin/src/setup/unified_aircraft.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: setup::unified_aircraft
    reason: "Unified aircraft setup logic"
  
  # Core plugins for simulation
  - file: game_bin/src/plugins/unified_world_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::unified_world_plugin
    reason: "Unified world plugin"
  
  - file: game_bin/src/plugins/vehicle_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::vehicle_plugin
    reason: "Vehicle plugin"
  
  - file: game_bin/src/plugins/player_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::player_plugin
    reason: "Player plugin"
  
  - file: game_bin/src/plugins/water_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::water_plugin
    reason: "Water plugin"
  
  - file: game_bin/src/plugins/persistence_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::persistence_plugin
    reason: "Persistence plugin"
  
  - file: game_bin/src/plugins/input_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::input_plugin
    reason: "Input plugin"
  
  - file: game_bin/src/plugins/vegetation_lod_plugin.rs
    target_crate: gameplay_sim
    bevy_dependency: true
    module_path: plugins::vegetation_lod_plugin
    reason: "Vegetation LOD plugin"

# ===== GAMEPLAY_RENDER (Meshes/Materials/Screen-Space FX) =====
gameplay_render:
  # Rendering systems
  - file: game_bin/src/systems/rendering/mod.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: rendering
    reason: "Rendering systems module organization"
  
  - file: game_bin/src/systems/rendering/vegetation_instancing.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: rendering::vegetation_instancing
    reason: "Vegetation instancing rendering"
  
  - file: game_bin/src/systems/rendering/render_optimizer_simple.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: rendering::render_optimizer_simple
    reason: "Simple render optimizer"
  
  - file: game_bin/src/systems/vegetation_instancing_integration.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: rendering::vegetation_instancing_integration
    reason: "Vegetation instancing integration"
  
  # Effects systems
  - file: game_bin/src/systems/effects/mod.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: effects
    reason: "Effects systems module organization"
  
  - file: game_bin/src/systems/effects/jet_flames.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: effects::jet_flames
    reason: "Jet flame effects"
  
  # Camera systems
  - file: game_bin/src/systems/camera.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: camera
    reason: "Camera system logic"
  
  # Visibility systems
  - file: game_bin/src/systems/visibility_fix.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: visibility_fix
    reason: "Visibility fix system"
  
  # Factory systems (material/mesh creation)
  - file: game_bin/src/factories/mod.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories
    reason: "Factory systems module organization"
  
  - file: game_bin/src/factories/entity_factory_unified.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::entity_factory_unified
    reason: "Unified entity factory (mesh/material creation)"
  
  - file: game_bin/src/factories/entity_builder_unified.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::entity_builder_unified
    reason: "Unified entity builder (mesh/material setup)"
  
  - file: game_bin/src/factories/material_factory.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::material_factory
    reason: "Material factory (material creation)"
  
  - file: game_bin/src/factories/mesh_factory.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::mesh_factory
    reason: "Mesh factory (mesh creation)"
  
  - file: game_bin/src/factories/transform_factory.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::transform_factory
    reason: "Transform factory (render positioning)"
  
  - file: game_bin/src/factories/generic_bundle.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::generic_bundle
    reason: "Generic bundle factory (render bundles)"
  
  - file: game_bin/src/factories/rendering_factory.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: factories::rendering_factory
    reason: "Rendering factory (render setup)"
  
  # Batching systems (render optimization)
  - file: game_bin/src/systems/batching.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: batching
    reason: "Batching systems for render optimization"
  
  - file: game_bin/src/systems/batching_test.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: batching_test
    reason: "Batching test systems"
  
  - file: game_bin/src/systems/batch_processing.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: batch_processing
    reason: "Batch processing systems"
  
  # World rendering systems
  - file: game_bin/src/systems/world/unified_factory_setup.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: world::unified_factory_setup
    reason: "Unified factory setup for world rendering"
  
  # Audio systems (audio effects)
  - file: game_bin/src/systems/audio.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: audio
    reason: "Audio system logic"
  
  - file: game_bin/src/systems/audio/realistic_vehicle_audio.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: audio::realistic_vehicle_audio
    reason: "Realistic vehicle audio effects"
  
  # Batching plugin
  - file: game_bin/src/plugins/batching_plugin.rs
    target_crate: gameplay_render
    bevy_dependency: true
    module_path: plugins::batching_plugin
    reason: "Batching plugin for render optimization"

# ===== GAMEPLAY_UI (Menus/HUD/Debug Overlays) =====
gameplay_ui:
  # UI systems
  - file: game_bin/src/systems/ui/mod.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: ui
    reason: "UI systems module organization"
  
  - file: game_bin/src/systems/ui/fps_display.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: ui::fps_display
    reason: "FPS display UI"
  
  - file: game_bin/src/systems/ui/controls_ui.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: ui::controls_ui
    reason: "Controls UI display"
  
  - file: game_bin/src/systems/ui/bugatti_telemetry.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: ui::bugatti_telemetry
    reason: "Bugatti telemetry UI"
  
  # Debug systems
  - file: game_bin/src/systems/debug.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: debug
    reason: "Debug system and overlays"
  
  - file: game_bin/src/systems/distance_cache_debug.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: debug::distance_cache_debug
    reason: "Distance cache debug display"
  
  - file: game_bin/src/systems/world/debug.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: debug::world_debug
    reason: "World debug display"
  
  - file: game_bin/src/systems/world/performance.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: debug::world_performance
    reason: "World performance debug display"
  
  # Performance monitoring and dashboard
  - file: game_bin/src/systems/performance_dashboard.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: performance::dashboard
    reason: "Performance dashboard UI"
  
  - file: game_bin/src/systems/performance_monitor.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: performance::monitor
    reason: "Performance monitor UI"
  
  - file: game_bin/src/systems/performance_integration.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: performance::integration
    reason: "Performance integration UI"
  
  # Timing service (for UI timing)
  - file: game_bin/src/systems/timing_service.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: timing_service
    reason: "Timing service for UI updates"
  
  # Config loader (for UI configuration)
  - file: game_bin/src/systems/config_loader.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: config_loader
    reason: "Config loader for UI settings"
  
  # Simple service example (for UI demonstrations)
  - file: game_bin/src/systems/simple_service_example.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: simple_service_example
    reason: "Simple service example for UI"
  
  # UI Plugin
  - file: game_bin/src/plugins/ui_plugin.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: plugins::ui_plugin
    reason: "UI plugin"
  
  # Examples (for UI demonstrations)
  - file: game_bin/src/examples/control_manager_integration.rs
    target_crate: gameplay_ui
    bevy_dependency: true
    module_path: examples::control_manager_integration
    reason: "Control manager integration example"

# ===== MAIN APPLICATION (Stay in game_bin) =====
game_bin_remaining:
  # Main application files
  - file: game_bin/src/main.rs
    target_crate: game_bin
    bevy_dependency: true
    module_path: main
    reason: "Main application entry point"
  
  - file: game_bin/src/lib.rs
    target_crate: game_bin
    bevy_dependency: true
    module_path: lib
    reason: "Library exports and public API"
  
  # Main game plugin (orchestrates all other plugins)
  - file: game_bin/src/plugins/mod.rs
    target_crate: game_bin
    bevy_dependency: true
    module_path: plugins
    reason: "Plugin module organization"
  
  - file: game_bin/src/plugins/game_plugin.rs
    target_crate: game_bin
    bevy_dependency: true
    module_path: plugins::game_plugin
    reason: "Main game plugin - orchestrates all subsystems"
  
  # Systems module organization (stays for compatibility)
  - file: game_bin/src/systems/mod.rs
    target_crate: game_bin
    bevy_dependency: true
    module_path: systems
    reason: "Systems module organization and re-exports"

# ===== DEPENDENCY VALIDATION =====
dependency_validation:
  # Ensure no circular dependencies
  # game_core can only depend on: bevy, serde, basic utilities
  # gameplay_sim can depend on: game_core, bevy, bevy_rapier3d, physics libs
  # gameplay_render can depend on: game_core, gameplay_sim, bevy, rendering libs
  # gameplay_ui can depend on: game_core, gameplay_sim, gameplay_render, bevy, UI libs
  
  validation_rules:
    - rule: "game_core cannot depend on gameplay_sim, gameplay_render, or gameplay_ui"
      enforcement: "Compile-time check via cargo"
    - rule: "gameplay_sim cannot depend on gameplay_render or gameplay_ui"
      enforcement: "Compile-time check via cargo"
    - rule: "gameplay_render cannot depend on gameplay_ui"
      enforcement: "Compile-time check via cargo"
    - rule: "All bevy dependencies must be version-matched"
      enforcement: "Workspace-level dependency management"
