warning: /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/Cargo.toml: unused manifest key: workspace.features
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling autocfg v1.4.0
   Compiling serde v1.0.219
    Checking cfg-if v1.0.0
   Compiling libc v0.2.172
   Compiling libm v0.2.15
   Compiling crossbeam-utils v0.8.21
   Compiling cfg_aliases v0.2.1
   Compiling parking_lot_core v0.9.11
    Checking equivalent v1.0.2
    Checking foldhash v0.1.5
    Checking allocator-api2 v0.2.21
   Compiling zerocopy v0.8.25
    Checking once_cell v1.21.3
    Checking pin-project-lite v0.2.16
    Checking smallvec v1.15.0
   Compiling hashbrown v0.15.3
   Compiling scopeguard v1.2.0
    Checking log v0.4.27
   Compiling winnow v0.7.10
   Compiling toml_datetime v0.6.9
   Compiling lock_api v0.4.13
   Compiling num-traits v0.2.19
   Compiling thiserror v2.0.12
    Checking parking v2.2.1
   Compiling getrandom v0.3.3
   Compiling indexmap v2.9.0
    Checking futures-core v0.3.31
   Compiling slab v0.4.9
   Compiling typeid v1.0.3
    Checking fastrand v2.3.0
    Checking futures-io v0.3.31
   Compiling unicode-xid v0.2.6
    Checking spin v0.9.8
    Checking thread_local v1.1.8
    Checking concurrent-queue v2.5.0
    Checking downcast-rs v2.0.1
    Checking futures-lite v2.6.0
    Checking atomic-waker v1.1.2
    Checking async-task v4.7.1
   Compiling toml_edit v0.22.26
    Checking crossbeam-queue v0.3.12
   Compiling quote v1.0.40
    Checking bevy_ptr v0.16.1
    Checking disqualified v1.0.0
   Compiling nix v0.30.1
    Checking either v1.15.0
    Checking nonmax v0.5.5
   Compiling syn v2.0.101
    Checking arrayvec v0.7.6
    Checking fixedbitset v0.5.7
    Checking bumpalo v3.17.0
   Compiling parking_lot v0.12.4
    Checking tracing-core v0.1.33
    Checking core-foundation-sys v0.8.7
    Checking bitflags v1.3.2
   Compiling paste v1.0.15
    Checking getrandom v0.2.16
   Compiling uuid v1.17.0
    Checking itertools v0.14.0
    Checking rand_core v0.6.4
    Checking event-listener v5.4.0
    Checking core-foundation v0.9.4
   Compiling rustversion v1.0.21
    Checking async-executor v1.13.2
    Checking foreign-types-shared v0.3.1
    Checking memchr v2.7.4
    Checking event-listener-strategy v0.5.4
    Checking raw-window-handle v0.6.2
    Checking regex-syntax v0.8.5
    Checking core-graphics-types v0.1.3
    Checking crossbeam-channel v0.5.15
   Compiling heck v0.5.0
    Checking regex-syntax v0.6.29
   Compiling shlex v1.3.0
   Compiling thiserror v1.0.69
    Checking aho-corasick v1.1.3
    Checking bit-vec v0.8.0
   Compiling cc v1.2.25
    Checking ppv-lite86 v0.2.21
   Compiling naga v24.0.0
    Checking unicode-width v0.1.14
    Checking overload v0.1.1
    Checking lazy_static v1.5.0
    Checking termcolor v1.4.1
    Checking sharded-slab v0.1.7
    Checking rand_chacha v0.3.1
    Checking nu-ansi-term v0.46.0
    Checking pp-rs v0.2.1
    Checking codespan-reporting v0.11.1
    Checking rand v0.8.5
    Checking bit-set v0.8.0
    Checking async-channel v2.3.1
    Checking tracing-log v0.2.0
    Checking malloc_buf v0.0.6
    Checking piper v0.2.4
    Checking base64 v0.21.7
    Checking hexf-parse v0.2.1
    Checking rustc-hash v1.1.0
    Checking objc v0.2.7
    Checking async-lock v3.4.0
   Compiling wgpu-hal v24.0.4
    Checking blocking v1.6.1
    Checking half v2.6.0
    Checking const_panic v0.2.12
    Checking constant_time_eq v0.3.1
    Checking block v0.1.6
   Compiling objc-sys v0.3.5
    Checking arrayref v0.3.9
    Checking euclid v0.22.11
    Checking async-broadcast v0.7.2
   Compiling wgpu-core v24.0.5
    Checking rand_distr v0.4.3
    Checking libloading v0.8.8
    Checking const_soft_float v0.1.4
    Checking tinyvec_macros v0.1.1
    Checking byteorder-lite v0.1.0
    Checking svg_fmt v0.4.5
    Checking stackfuture v0.3.0
    Checking async-fs v2.1.2
   Compiling litrs v0.4.1
    Checking atomicow v1.1.0
    Checking constgebra v0.1.4
    Checking tinyvec v1.9.0
   Compiling wgpu v24.0.5
    Checking rectangle-pack v0.4.2
    Checking objc2-encode v4.1.0
    Checking bit-vec v0.6.3
    Checking crossbeam-epoch v0.9.18
    Checking static_assertions v1.1.0
    Checking const-fnv1a-hash v1.1.0
    Checking data-encoding v2.9.0
    Checking regex-automata v0.1.10
    Checking bit-set v0.5.3
    Checking offset-allocator v0.2.0
    Checking objc2 v0.5.2
    Checking dispatch v0.2.0
    Checking regex-automata v0.4.9
    Checking crossbeam-deque v0.8.6
   Compiling blake3 v1.8.2
    Checking approx v0.5.1
    Checking immutable-chunkmap v2.0.6
   Compiling winit v0.30.11
    Checking guillotiere v0.6.2
    Checking byteorder v1.5.0
   Compiling matrixmultiply v0.3.10
   Compiling document-features v0.2.11
   Compiling typenum v1.18.0
   Compiling heapless v0.8.0
    Checking radsort v0.1.1
    Checking dpi v0.1.2
    Checking cursor-icon v1.2.0
    Checking hash32 v0.3.1
    Checking num-complex v0.4.6
    Checking matchers v0.1.0
    Checking num-integer v0.1.46
    Checking stable_deref_trait v1.2.0
    Checking rawpointer v0.2.1
    Checking robust v1.2.0
    Checking ordered-float v5.0.0
    Checking ena v0.14.3
    Checking crossbeam v0.8.4
    Checking block2 v0.5.1
    Checking num-rational v0.4.2
    Checking rustc-hash v2.1.1
    Checking simd-adler32 v0.3.7
   Compiling bevy_macro_utils v0.16.1
   Compiling encase_derive_impl v0.10.0
    Checking iana-time-zone v0.1.63
   Compiling rayon-core v1.12.1
    Checking adler2 v2.0.0
    Checking crc32fast v1.4.2
    Checking weezl v0.1.10
    Checking miniz_oxide v0.8.8
    Checking zune-inflate v0.2.54
    Checking fdeflate v0.3.7
    Checking color_quant v1.1.0
    Checking lebe v0.5.2
    Checking bit_field v0.10.2
    Checking simple_test v0.1.0 (/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/tests)
    Checking gif v0.13.3
    Checking flate2 v1.1.1
    Checking rstar v0.12.2
    Checking rayon v1.10.0
    Checking exr v1.73.0
   Compiling serde_derive v1.0.219
   Compiling bytemuck_derive v1.9.3
   Compiling thiserror-impl v2.0.12
   Compiling derive_more-impl v1.0.0
   Compiling bevy_reflect_derive v0.16.1
   Compiling assert_type_match v0.1.1
   Compiling variadics_please v1.1.0
   Compiling bevy_ecs_macros v0.16.1
   Compiling bevy_derive v0.16.1
   Compiling tracing-attributes v0.1.28
   Compiling foreign-types-macros v0.2.3
    Checking regex v1.11.1
   Compiling strum_macros v0.26.4
    Checking foreign-types v0.5.0
   Compiling thiserror-impl v1.0.69
   Compiling profiling-procmacros v1.0.17
   Compiling encase_derive v0.10.0
    Checking profiling v1.0.16
   Compiling bevy_asset_macros v0.16.1
   Compiling bevy_render_macros v0.16.1
    Checking bytemuck v1.23.0
   Compiling bevy_encase_derive v0.16.1
    Checking tracing v0.1.41
   Compiling enumn v0.1.14
    Checking image v0.25.6
    Checking safe_arch v0.7.4
    Checking core-graphics v0.23.2
    Checking wide v0.7.32
    Checking tracing-subscriber v0.3.19
   Compiling nalgebra-macros v0.2.2
   Compiling bevy_state_macros v0.16.1
   Compiling bevy_gizmos_macros v0.16.1
   Compiling num-derive v0.4.2
    Checking qoi v0.4.1
    Checking jpeg-decoder v0.3.2
    Checking png v0.17.16
    Checking strum v0.26.3
    Checking tiff v0.9.1
    Checking derive_more v1.0.0
    Checking simba v0.9.0
    Checking image v0.24.9
    Checking bitflags v2.9.1
    Checking glam v0.29.3
    Checking smol_str v0.2.2
    Checking erased-serde v0.4.6
    Checking accesskit v0.18.0
    Checking chrono v0.4.41
    Checking wgpu-types v24.0.0
    Checking ron v0.8.1
    Checking metal v0.31.0
    Checking objc2-foundation v0.2.2
    Checking bevy_platform v0.16.1
    Checking spade v2.13.1
    Checking engine_core v0.1.0 (/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/engine_core)
    Checking bevy_utils v0.16.1
    Checking bevy_tasks v0.16.1
    Checking ctrlc v3.4.7
    Checking accesskit_consumer v0.27.0
    Checking objc2-app-kit v0.2.2
    Checking bevy_reflect v0.16.1
    Checking encase v0.10.0
    Checking bevy_mikktspace v0.16.1
    Checking hexasphere v15.1.0
    Checking nalgebra v0.33.2
    Checking accesskit_macos v0.19.0
    Checking accesskit_winit v0.25.0
    Checking naga_oil v0.17.1
    Checking bevy_ecs v0.16.1
    Checking bevy_math v0.16.1
    Checking parry3d v0.20.2
    Checking rapier3d v0.25.1
    Checking bevy_color v0.16.2
    Checking bevy_app v0.16.1
    Checking bevy_log v0.16.1
    Checking bevy_input v0.16.1
    Checking bevy_asset v0.16.1
    Checking bevy_time v0.16.1
    Checking bevy_a11y v0.16.1
    Checking bevy_state v0.16.1
    Checking bevy_transform v0.16.1
    Checking bevy_diagnostic v0.16.1
    Checking bevy_window v0.16.1
    Checking bevy_image v0.16.1
    Checking bevy_mesh v0.16.1
    Checking bevy_input_focus v0.16.1
    Checking bevy_render v0.16.1
    Checking bevy_winit v0.16.1
    Checking bevy_core_pipeline v0.16.1
    Checking bevy_picking v0.16.1
    Checking bevy_scene v0.16.1
    Checking bevy_pbr v0.16.1
    Checking bevy_gizmos v0.16.1
    Checking bevy_internal v0.16.1
    Checking bevy v0.16.1
    Checking bevy_rapier3d v0.30.0
    Checking engine_bevy v0.1.0 (/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/engine_bevy)
    Checking test_utils v0.1.0 (/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/test_utils)
warning: unused import: `bevy::prelude::*`
 --> engine_bevy/src/lib.rs:5:5
  |
5 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `bevy::render::mesh::*`
 --> test_utils/src/golden_frame.rs:2:5
  |
2 | use bevy::render::mesh::*;
  |     ^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: trait `AudioSink` is never used
  --> engine_bevy/src/adapters.rs:14:11
   |
14 | pub trait AudioSink {
   |           ^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `engine_bevy` (lib) generated 2 warnings (run `cargo fix --lib -p engine_bevy` to apply 1 suggestion)
    Checking game_core v0.1.0 (/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core)
warning: `test_utils` (lib) generated 1 warning (run `cargo fix --lib -p test_utils` to apply 1 suggestion)
warning: unused import: `bevy::prelude::*`
 --> game_core/src/lib.rs:5:5
  |
5 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::components::*`
 --> game_core/src/persistence/save_system.rs:5:5
  |
5 | use crate::components::*;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::game_state::GameState`
 --> game_core/src/persistence/load_system.rs:4:5
  |
4 | use crate::game_state::GameState;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `compat::*`
  --> game_core/src/lib.rs:31:9
   |
31 | pub use compat::*;
   |         ^^^^^^^^^

warning: `game_core` (lib) generated 4 warnings (run `cargo fix --lib -p game_core` to apply 4 suggestions)
    Checking gameplay_sim v0.1.0 (/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/gameplay_sim)
error[E0432]: unresolved import `bevy::prelude::SpatialBundle`
 --> gameplay_sim/src/compat.rs:6:5
  |
6 |     SpatialBundle, Transform, Visibility, InheritedVisibility, ViewVisibility, GlobalTransform,
  |     ^^^^^^^^^^^^^ no `SpatialBundle` in `prelude`

error[E0432]: unresolved import `crate::systems::world::map_system::MapChunk`
  --> gameplay_sim/src/world/unified_distance_culling.rs:17:5
   |
17 | use crate::systems::world::map_system::MapChunk;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `MapChunk` in `systems::world::map_system`
   |
help: consider importing this struct through its public re-export instead
   |
17 - use crate::systems::world::map_system::MapChunk;
17 + use crate::world::MapChunk;
   |

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `gameplay_render`
  --> gameplay_sim/src/factories/mod.rs:24:9
   |
24 | pub use gameplay_render::factories::rendering_factory::{
   |         ^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `gameplay_render`
   |
   = help: if you wanted to use a crate named `gameplay_render`, use `cargo add gameplay_render` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `crate::systems::input::control_action_system`, `crate::systems::input::control_validation_system`
 --> gameplay_sim/src/plugins/input_plugin.rs:5:5
  |
5 |     control_action_system, control_validation_system
  |     ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^ no `control_validation_system` in `systems::input`
  |     |
  |     no `control_action_system` in `systems::input`

error[E0412]: cannot find type `PhysicsConfig` in this scope
  --> gameplay_sim/src/services/simple_services.rs:36:21
   |
36 |     physics_config: PhysicsConfig,
   |                     ^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
1  + use crate::config::PhysicsConfig;
   |
1  + use crate::game_config::PhysicsConfig;
   |
1  + use game_core::prelude::game_config::PhysicsConfig;
   |

error[E0412]: cannot find type `PhysicsConfig` in this scope
  --> gameplay_sim/src/services/simple_services.rs:40:32
   |
40 |     pub fn new(physics_config: PhysicsConfig) -> Self {
   |                                ^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
1  + use crate::config::PhysicsConfig;
   |
1  + use crate::game_config::PhysicsConfig;
   |
1  + use game_core::prelude::game_config::PhysicsConfig;
   |

error[E0412]: cannot find type `PerformanceCounters` in this scope
  --> gameplay_sim/src/lod/modern_lod_system.rs:26:38
   |
26 |     mut performance_counters: ResMut<PerformanceCounters>,
   |                                      ^^^^^^^^^^^^^^^^^^^
   |
  ::: /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/engine_core/src/performance.rs:70:1
   |
70 | pub struct PerformanceAlert {
   | --------------------------- similarly named struct `PerformanceAlert` defined here
   |
help: a struct with a similar name exists
   |
26 -     mut performance_counters: ResMut<PerformanceCounters>,
26 +     mut performance_counters: ResMut<PerformanceAlert>,
   |
help: consider importing one of these structs
   |
14 + use crate::compat::PerformanceCounters;
   |
14 + use crate::performance_config::PerformanceCounters;
   |
14 + use game_core::prelude::performance_config::PerformanceCounters;
   |

error[E0412]: cannot find type `PerformanceCounters` in this scope
   --> gameplay_sim/src/lod/modern_lod_system.rs:178:38
    |
178 |     mut performance_counters: ResMut<PerformanceCounters>,
    |                                      ^^^^^^^^^^^^^^^^^^^
    |
   ::: /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/engine_core/src/performance.rs:70:1
    |
70  | pub struct PerformanceAlert {
    | --------------------------- similarly named struct `PerformanceAlert` defined here
    |
help: a struct with a similar name exists
    |
178 -     mut performance_counters: ResMut<PerformanceCounters>,
178 +     mut performance_counters: ResMut<PerformanceAlert>,
    |
help: consider importing one of these structs
    |
14  + use crate::compat::PerformanceCounters;
    |
14  + use crate::performance_config::PerformanceCounters;
    |
14  + use game_core::prelude::performance_config::PerformanceCounters;
    |

error[E0412]: cannot find type `PerformanceCounters` in this scope
   --> gameplay_sim/src/lod/modern_lod_system.rs:230:29
    |
230 |         app.init_resource::<PerformanceCounters>()
    |                             ^^^^^^^^^^^^^^^^^^^
    |
   ::: /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/engine_core/src/performance.rs:70:1
    |
70  | pub struct PerformanceAlert {
    | --------------------------- similarly named struct `PerformanceAlert` defined here
    |
help: a struct with a similar name exists
    |
230 -         app.init_resource::<PerformanceCounters>()
230 +         app.init_resource::<PerformanceAlert>()
    |
help: consider importing one of these structs
    |
14  + use crate::compat::PerformanceCounters;
    |
14  + use crate::performance_config::PerformanceCounters;
    |
14  + use game_core::prelude::performance_config::PerformanceCounters;
    |

error[E0422]: cannot find struct, variant or union type `Node` in this scope
  --> gameplay_sim/src/setup/world.rs:30:13
   |
30 |             Node {
   |             ^^^^ help: a variant with a similar name exists: `None`
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:576:5
   |
   = note: similarly named variant `None` defined here

error[E0422]: cannot find struct, variant or union type `TextFont` in this scope
  --> gameplay_sim/src/setup/world.rs:48:17
   |
48 |                 TextFont {
   |                 ^^^^^^^^ not found in this scope

error[E0425]: cannot find value `forward` in this scope
  --> gameplay_sim/src/systems/movement/vehicles.rs:43:35
   |
43 |         target_linear_velocity -= forward * speed * brake_value;
   |                                   ^^^^^^^
   |
help: the binding `forward` is available in a different scope in the same function
  --> gameplay_sim/src/systems/movement/vehicles.rs:38:13
   |
38 |         let forward = transform.forward();
   |             ^^^^^^^

error[E0425]: cannot find value `forward` in this scope
  --> gameplay_sim/src/systems/movement/aircraft.rs:41:35
   |
41 |         target_linear_velocity -= forward * speed;
   |                                   ^^^^^^^
   |
help: the binding `forward` is available in a different scope in the same function
  --> gameplay_sim/src/systems/movement/aircraft.rs:37:13
   |
37 |         let forward = transform.forward();
   |             ^^^^^^^

error[E0412]: cannot find type `AnimationPlayer` in this scope
  --> gameplay_sim/src/systems/world/npc_lod.rs:84:37
   |
84 |     mut animation_query: Query<&mut AnimationPlayer>,
   |                                     ^^^^^^^^^^^^^^^ not found in this scope
   |
help: you might be missing a type parameter
   |
82 | pub fn npc_animation_lod_system<AnimationPlayer>(
   |                                +++++++++++++++++

error[E0423]: expected value, found struct `NPC`
   --> gameplay_sim/src/systems/world/npc_lod.rs:140:9
    |
140 |         NPC,
    |         ^^^
    |
   ::: /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:33:1
    |
33  | pub struct NPC {
    | -------------- `NPC` defined here
    |
help: use struct literal syntax instead
    |
140 |         NPC { target_position: val, speed: val, last_update: val, update_interval: val, health: val, max_health: val, behavior_state: val, spawn_time: val },
    |             ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
help: consider importing one of these unit variants instead
    |
10  + use crate::ContentType::NPC;
    |
10  + use crate::CullingCategory::NPC;
    |
10  + use crate::input::ControlEntityType::NPC;
    |
10  + use crate::spawn_validation::SpawnableType::NPC;
    |
      and 6 other candidates

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
  --> gameplay_sim/src/factories/entity_factory/spawner_building.rs:35:9
   |
35 |         MaterialMeshBundle {
   |         ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this type alias
   |
1  + use crate::compat::MaterialMeshBundle;
   |

error[E0422]: cannot find struct, variant or union type `Vehicle` in this scope
  --> gameplay_sim/src/factories/entity_factory/spawner_vehicle.rs:23:9
   |
23 |         Vehicle {
   |         ^^^^^^^ not found in this scope
   |
help: consider importing one of these items
   |
1  + use crate::ContentType::Vehicle;
   |
1  + use crate::CullingCategory::Vehicle;
   |
1  + use crate::compat::vehicles::Vehicle;
   |
1  + use crate::input::ControlEntityType::Vehicle;
   |
     and 8 other candidates

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
  --> gameplay_sim/src/factories/entity_factory/spawner_vehicle.rs:35:9
   |
35 |         MaterialMeshBundle {
   |         ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this type alias
   |
1  + use crate::compat::MaterialMeshBundle;
   |

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
  --> gameplay_sim/src/factories/entity_factory/spawner_npc.rs:37:9
   |
37 |         MaterialMeshBundle {
   |         ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this type alias
   |
1  + use crate::compat::MaterialMeshBundle;
   |

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
  --> gameplay_sim/src/factories/entity_factory/spawner_tree.rs:33:9
   |
33 |         MaterialMeshBundle {
   |         ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this type alias
   |
1  + use crate::compat::MaterialMeshBundle;
   |

error[E0412]: cannot find type `PhysicsConfig` in this scope
  --> gameplay_sim/src/factories/generic_bundle.rs:39:21
   |
39 |     physics_config: PhysicsConfig,
   |                     ^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
1  + use crate::config::PhysicsConfig;
   |
1  + use crate::game_config::PhysicsConfig;
   |
1  + use game_core::prelude::game_config::PhysicsConfig;
   |

error[E0412]: cannot find type `Vehicle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:100:9
    |
100 |         Vehicle,
    |         ^^^^^^^ not found in this scope
    |
help: consider importing one of these structs
    |
1   + use crate::compat::vehicles::Vehicle;
    |
1   + use game_core::prelude::vehicles::Vehicle;
    |

error[E0412]: cannot find type `MaterialMeshBundle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:102:9
    |
102 |         MaterialMeshBundle<StandardMaterial>,
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this type alias
    |
1   + use crate::compat::MaterialMeshBundle;
    |

error[E0422]: cannot find struct, variant or union type `Vehicle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:106:23
    |
106 |         let vehicle = Vehicle {
    |                       ^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
1   + use crate::ContentType::Vehicle;
    |
1   + use crate::CullingCategory::Vehicle;
    |
1   + use crate::compat::vehicles::Vehicle;
    |
1   + use crate::input::ControlEntityType::Vehicle;
    |
      and 8 other candidates

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:120:27
    |
120 |         let mesh_bundle = MaterialMeshBundle {
    |                           ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this type alias
    |
1   + use crate::compat::MaterialMeshBundle;
    |

error[E0412]: cannot find type `MaterialMeshBundle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:139:9
    |
139 |         MaterialMeshBundle<StandardMaterial>,
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this type alias
    |
1   + use crate::compat::MaterialMeshBundle;
    |

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:157:27
    |
157 |         let mesh_bundle = MaterialMeshBundle {
    |                           ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this type alias
    |
1   + use crate::compat::MaterialMeshBundle;
    |

error[E0412]: cannot find type `MaterialMeshBundle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:176:9
    |
176 |         MaterialMeshBundle<StandardMaterial>,
    |         ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this type alias
    |
1   + use crate::compat::MaterialMeshBundle;
    |

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
   --> gameplay_sim/src/factories/generic_bundle.rs:196:27
    |
196 |         let mesh_bundle = MaterialMeshBundle {
    |                           ^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this type alias
    |
1   + use crate::compat::MaterialMeshBundle;
    |

error[E0433]: failed to resolve: use of undeclared type `PhysicsConfig`
   --> gameplay_sim/src/factories/generic_bundle.rs:210:29
    |
210 |             physics_config: PhysicsConfig::default(),
    |                             ^^^^^^^^^^^^^ use of undeclared type `PhysicsConfig`
    |
help: consider importing one of these structs
    |
1   + use crate::config::PhysicsConfig;
    |
1   + use crate::game_config::PhysicsConfig;
    |
1   + use game_core::prelude::game_config::PhysicsConfig;
    |

error[E0422]: cannot find struct, variant or union type `MaterialMeshBundle` in this scope
  --> gameplay_sim/src/factories/rendering_factory.rs:20:24
   |
20 |         commands.spawn(MaterialMeshBundle {
   |                        ^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing this type alias
   |
1  + use crate::compat::MaterialMeshBundle;
   |

error[E0603]: struct import `UnifiedChunkEntity` is private
  --> gameplay_sim/src/world/layered_generation.rs:18:26
   |
18 |     UnifiedWorldManager, UnifiedChunkEntity, ContentLayer, ChunkCoord, ChunkState,
   |                          ^^^^^^^^^^^^^^^^^^ private struct import
   |
note: the struct import `UnifiedChunkEntity` is defined here...
  --> gameplay_sim/src/systems/world/unified_world.rs:13:5
   |
13 | use game_core::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the struct `UnifiedChunkEntity` which is defined here
  --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/prelude.rs:7:9
   |
7  | pub use crate::components::*;
   |         ^^^^^^^^^^^^^^^^^ you could import this directly
help: import `UnifiedChunkEntity` through the re-export
   |
18 |     UnifiedWorldManager, prelude::UnifiedChunkEntity, ContentLayer, ChunkCoord, ChunkState,
   |                          +++++++++

error[E0603]: enum import `ChunkState` is private
  --> gameplay_sim/src/world/layered_generation.rs:18:72
   |
18 |     UnifiedWorldManager, UnifiedChunkEntity, ContentLayer, ChunkCoord, ChunkState,
   |                                                                        ^^^^^^^^^^ private enum import
   |
note: the enum import `ChunkState` is defined here...
  --> gameplay_sim/src/systems/world/unified_world.rs:13:5
   |
13 | use game_core::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ChunkState` which is defined here
  --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/prelude.rs:7:9
   |
7  | pub use crate::components::*;
   |         ^^^^^^^^^^^^^^^^^ you could import this directly
help: import `ChunkState` through the re-export
   |
18 |     UnifiedWorldManager, UnifiedChunkEntity, ContentLayer, ChunkCoord, prelude::ChunkState,
   |                                                                        +++++++++

error[E0603]: struct import `UnifiedChunkEntity` is private
  --> gameplay_sim/src/world/unified_lod.rs:17:26
   |
17 |     UnifiedWorldManager, UnifiedChunkEntity, ContentLayer, ChunkState, UNIFIED_STREAMING_RADIUS,
   |                          ^^^^^^^^^^^^^^^^^^ private struct import
   |
note: the struct import `UnifiedChunkEntity` is defined here...
  --> gameplay_sim/src/systems/world/unified_world.rs:13:5
   |
13 | use game_core::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the struct `UnifiedChunkEntity` which is defined here
  --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/prelude.rs:7:9
   |
7  | pub use crate::components::*;
   |         ^^^^^^^^^^^^^^^^^ you could import this directly
help: import `UnifiedChunkEntity` through the re-export
   |
17 |     UnifiedWorldManager, prelude::UnifiedChunkEntity, ContentLayer, ChunkState, UNIFIED_STREAMING_RADIUS,
   |                          +++++++++

error[E0603]: enum import `ChunkState` is private
  --> gameplay_sim/src/world/unified_lod.rs:17:60
   |
17 |     UnifiedWorldManager, UnifiedChunkEntity, ContentLayer, ChunkState, UNIFIED_STREAMING_RADIUS,
   |                                                            ^^^^^^^^^^ private enum import
   |
note: the enum import `ChunkState` is defined here...
  --> gameplay_sim/src/systems/world/unified_world.rs:13:5
   |
13 | use game_core::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ChunkState` which is defined here
  --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/prelude.rs:7:9
   |
7  | pub use crate::components::*;
   |         ^^^^^^^^^^^^^^^^^ you could import this directly
help: import `ChunkState` through the re-export
   |
17 |     UnifiedWorldManager, UnifiedChunkEntity, ContentLayer, prelude::ChunkState, UNIFIED_STREAMING_RADIUS,
   |                                                            +++++++++

error[E0603]: enum import `ChunkState` is private
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:116:89
    |
116 |             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loaded { .. }))
    |                                                                                         ^^^^^^^^^^ private enum import
    |
note: the enum import `ChunkState` is defined here...
   --> gameplay_sim/src/systems/world/unified_world.rs:13:5
    |
13  | use game_core::prelude::*;
    |     ^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ChunkState` which is defined here
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/prelude.rs:7:9
    |
7   | pub use crate::components::*;
    |         ^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing one of these variants instead
    |
116 -             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loaded { .. }))
116 +             .filter(|chunk| matches!(chunk.state, crate::ChunkState::Loaded { .. }))
    |
116 -             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loaded { .. }))
116 +             .filter(|chunk| matches!(chunk.state, game_core::prelude::ChunkState::Loaded { .. }))
    |
help: import `ChunkState` through the re-export
    |
116 -             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loaded { .. }))
116 +             .filter(|chunk| matches!(chunk.state, prelude::ChunkState { .. }))
    |

error[E0603]: enum import `ChunkState` is private
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:120:89
    |
120 |             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loading))
    |                                                                                         ^^^^^^^^^^ private enum import
    |
note: the enum import `ChunkState` is defined here...
   --> gameplay_sim/src/systems/world/unified_world.rs:13:5
    |
13  | use game_core::prelude::*;
    |     ^^^^^^^^^^^^^^^^^^^^^
note: ...and refers to the enum `ChunkState` which is defined here
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/prelude.rs:7:9
    |
7   | pub use crate::components::*;
    |         ^^^^^^^^^^^^^^^^^ you could import this directly
help: consider importing one of these unit variants instead
    |
120 -             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loading))
120 +             .filter(|chunk| matches!(chunk.state, crate::ChunkState::Loading))
    |
120 -             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loading))
120 +             .filter(|chunk| matches!(chunk.state, game_core::prelude::ChunkState::Loading))
    |
help: import `ChunkState` through the re-export
    |
120 -             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loading))
120 +             .filter(|chunk| matches!(chunk.state, prelude::ChunkState))
    |

warning: unused import: `bevy_rapier3d::prelude::*`
  --> gameplay_sim/src/lib.rs:11:16
   |
11 | pub(crate) use bevy_rapier3d::prelude::*;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `game_core::prelude::*`
  --> gameplay_sim/src/lib.rs:12:16
   |
12 | pub(crate) use game_core::prelude::*;
   |                ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ConfigService`, `EnhancedTimingService`, `PhysicsService`, `initialize_simple_services`, and `update_timing_service_system`
 --> gameplay_sim/src/services/mod.rs:4:27
  |
4 | pub use simple_services::{ConfigService, PhysicsService, EnhancedTimingService, initialize_simple_services, update_timing_service_system};
  |                           ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `GroundDetectionPlugin` and `GroundDetectionService`
 --> gameplay_sim/src/services/mod.rs:5:28
  |
5 | pub use ground_detection::{GroundDetectionService, GroundDetectionPlugin};
  |                            ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, and `info`
 --> gameplay_sim/src/physics/utilities.rs:6:15
  |
6 | use tracing::{info, warn, error, debug};
  |               ^^^^        ^^^^^  ^^^^^

warning: unused import: `bevy::prelude::*`
 --> gameplay_sim/src/physics/safeguards.rs:4:5
  |
4 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `player::*`
  --> gameplay_sim/src/movement/mod.rs:23:9
   |
23 | pub use player::*;
   |         ^^^^^^^^^

warning: unused import: `vehicles::*`
  --> gameplay_sim/src/movement/mod.rs:24:9
   |
24 | pub use vehicles::*;
   |         ^^^^^^^^^^^

warning: unused import: `aircraft::*`
  --> gameplay_sim/src/movement/mod.rs:25:9
   |
25 | pub use aircraft::*;
   |         ^^^^^^^^^^^

warning: unused import: `realistic_vehicle_physics::*`
  --> gameplay_sim/src/movement/mod.rs:26:9
   |
26 | pub use realistic_vehicle_physics::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `realistic_vehicle_input::*`
  --> gameplay_sim/src/movement/mod.rs:27:9
   |
27 | pub use realistic_vehicle_input::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `realistic_vehicle_physics_core::*`
  --> gameplay_sim/src/movement/mod.rs:28:9
   |
28 | pub use realistic_vehicle_physics_core::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `supercar_input::*`
  --> gameplay_sim/src/movement/mod.rs:29:9
   |
29 | pub use supercar_input::*;
   |         ^^^^^^^^^^^^^^^^^

warning: unused import: `supercar_physics::*`
  --> gameplay_sim/src/movement/mod.rs:30:9
   |
30 | pub use supercar_physics::*;
   |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `supercar_effects::*`
  --> gameplay_sim/src/movement/mod.rs:31:9
   |
31 | pub use supercar_effects::*;
   |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `vehicle_sets::*`
  --> gameplay_sim/src/movement/mod.rs:32:9
   |
32 | pub use vehicle_sets::*;
   |         ^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `debug-movement`
  --> gameplay_sim/src/world/debug.rs:23:11
   |
23 |     #[cfg(feature = "debug-movement")]
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove the condition
   |
   = note: no expected values for `feature`
   = help: consider adding `debug-movement` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused imports: `CHARACTER_GROUP` and `VEHICLE_GROUP`
  --> gameplay_sim/src/world/map_system.rs:17:42
   |
17 | use game_core::constants::{STATIC_GROUP, VEHICLE_GROUP, CHARACTER_GROUP};
   |                                          ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `debug-ui`
   --> gameplay_sim/src/world/vegetation_lod.rs:189:13
    |
189 |     if cfg!(feature = "debug-ui") {
    |             ^^^^^^^^^^^^^^^^^^^^ help: remove the condition
    |
    = note: no expected values for `feature`
    = help: consider adding `debug-ui` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `npc::*`
  --> gameplay_sim/src/world/mod.rs:33:9
   |
33 | pub use npc::*;
   |         ^^^^^^

warning: unused import: `culling::*`
  --> gameplay_sim/src/world/mod.rs:34:9
   |
34 | pub use culling::*;
   |         ^^^^^^^^^^

warning: unused import: `dynamic_content::*`
  --> gameplay_sim/src/world/mod.rs:35:9
   |
35 | pub use dynamic_content::*;
   |         ^^^^^^^^^^^^^^^^^^

warning: unused import: `performance::*`
  --> gameplay_sim/src/world/mod.rs:36:9
   |
36 | pub use performance::*;
   |         ^^^^^^^^^^^^^^

warning: unused import: `road_network::*`
  --> gameplay_sim/src/world/mod.rs:37:9
   |
37 | pub use road_network::*;
   |         ^^^^^^^^^^^^^^^

warning: unused import: `road_mesh::*`
  --> gameplay_sim/src/world/mod.rs:38:9
   |
38 | pub use road_mesh::*;
   |         ^^^^^^^^^^^^

warning: unused import: `road_generation::*`
  --> gameplay_sim/src/world/mod.rs:39:9
   |
39 | pub use road_generation::*;
   |         ^^^^^^^^^^^^^^^^^^

warning: unused import: `debug::*`
  --> gameplay_sim/src/world/mod.rs:40:9
   |
40 | pub use debug::*;
   |         ^^^^^^^^

warning: unused import: `map_system::*`
  --> gameplay_sim/src/world/mod.rs:41:9
   |
41 | pub use map_system::*;
   |         ^^^^^^^^^^^^^

warning: unused import: `unified_world::*`
  --> gameplay_sim/src/world/mod.rs:44:9
   |
44 | pub use unified_world::*;
   |         ^^^^^^^^^^^^^^^^

warning: unused import: `layered_generation::*`
  --> gameplay_sim/src/world/mod.rs:45:9
   |
45 | pub use layered_generation::*;
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `unified_lod::*`
  --> gameplay_sim/src/world/mod.rs:46:9
   |
46 | pub use unified_lod::*;
   |         ^^^^^^^^^^^^^^

warning: unused import: `npc_lod::*`
  --> gameplay_sim/src/world/mod.rs:47:9
   |
47 | pub use npc_lod::*;
   |         ^^^^^^^^^^

warning: unused import: `npc_spawn::*`
  --> gameplay_sim/src/world/mod.rs:48:9
   |
48 | pub use npc_spawn::*;
   |         ^^^^^^^^^^^^

warning: unused import: `vegetation_lod::*`
  --> gameplay_sim/src/world/mod.rs:50:9
   |
50 | pub use vegetation_lod::*;
   |         ^^^^^^^^^^^^^^^^^

warning: unused import: `unified_distance_culling::UnifiedCullable`
  --> gameplay_sim/src/world/mod.rs:52:9
   |
52 | pub use unified_distance_culling::UnifiedCullable;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `NPCLODUpdate`, `VegetationLODUpdate`, and `VehicleLODUpdate`
  --> gameplay_sim/src/world/mod.rs:54:23
   |
54 | pub use unified_lod::{VehicleLODUpdate, NPCLODUpdate, VegetationLODUpdate};
   |                       ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^

warning: unused import: `unified_factory_setup::*`
  --> gameplay_sim/src/world/mod.rs:55:9
   |
55 | pub use unified_factory_setup::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy::prelude::*`
  --> gameplay_sim/src/input/control_manager_ext.rs:12:5
   |
12 | use bevy::prelude::*;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `input_config::*`
  --> gameplay_sim/src/input/mod.rs:18:9
   |
18 | pub use input_config::*;
   |         ^^^^^^^^^^^^^^^

warning: unused import: `input_manager::*`
  --> gameplay_sim/src/input/mod.rs:19:9
   |
19 | pub use input_manager::*;
   |         ^^^^^^^^^^^^^^^^

warning: unused import: `control_manager_ext::*`
  --> gameplay_sim/src/input/mod.rs:22:9
   |
22 | pub use control_manager_ext::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `unified_distance_calculator::*`
 --> gameplay_sim/src/distance/mod.rs:3:9
  |
3 | pub use unified_distance_calculator::*;
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `modern_lod_system::*`
  --> gameplay_sim/src/lod/mod.rs:14:9
   |
14 | pub use modern_lod_system::*;
   |         ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `world::*`
 --> gameplay_sim/src/setup/mod.rs:9:9
  |
9 | pub use world::*;
  |         ^^^^^^^^

warning: unused import: `vehicles::*`
  --> gameplay_sim/src/setup/mod.rs:10:9
   |
10 | pub use vehicles::*;
   |         ^^^^^^^^^^^

warning: unused import: `environment::*`
  --> gameplay_sim/src/setup/mod.rs:11:9
   |
11 | pub use environment::*;
   |         ^^^^^^^^^^^^^^

warning: unused import: `unified_vehicles::*`
  --> gameplay_sim/src/setup/mod.rs:12:9
   |
12 | pub use unified_vehicles::*;
   |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `unified_npcs::*`
  --> gameplay_sim/src/setup/mod.rs:13:9
   |
13 | pub use unified_npcs::*;
   |         ^^^^^^^^^^^^^^^

warning: unused import: `unified_aircraft::*`
  --> gameplay_sim/src/setup/mod.rs:14:9
   |
14 | pub use unified_aircraft::*;
   |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy::asset::Assets`
 --> gameplay_sim/src/bevy16_compat.rs:4:5
  |
4 | use bevy::asset::Assets;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::input::VehicleType as ConfigVehicleType`
  --> gameplay_sim/src/systems/input/control_manager.rs:23:5
   |
23 | use crate::input::VehicleType as ConfigVehicleType;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy_rapier3d::prelude::*`
 --> gameplay_sim/src/systems/interaction.rs:2:5
  |
2 | use bevy_rapier3d::prelude::*;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `realistic_vehicle_physics::*`
  --> gameplay_sim/src/systems/movement/mod.rs:26:9
   |
26 | pub use realistic_vehicle_physics::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy::prelude::*`
 --> gameplay_sim/src/systems/realistic_physics_safeguards.rs:4:5
  |
4 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
  --> gameplay_sim/src/systems/world/road_network.rs:12:5
   |
12 | use game_core::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `RoadSpline`
  --> gameplay_sim/src/systems/world/road_generation.rs:15:56
   |
15 | use crate::systems::world::road_network::{RoadNetwork, RoadSpline, RoadType};
   |                                                        ^^^^^^^^^^

warning: unused import: `bevy::prelude::*`
 --> gameplay_sim/src/systems/world/debug.rs:1:5
  |
1 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^

warning: unnecessary parentheses around assigned value
   --> gameplay_sim/src/systems/world/map_system.rs:185:28
    |
185 |             let distance = ((chunk_key.0 - current_chunk.0).abs() + (chunk_key.1 - current_chunk.1).abs());
    |                            ^                                                                             ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
185 -             let distance = ((chunk_key.0 - current_chunk.0).abs() + (chunk_key.1 - current_chunk.1).abs());
185 +             let distance = (chunk_key.0 - current_chunk.0).abs() + (chunk_key.1 - current_chunk.1).abs();
    |

warning: unused import: `std::collections::HashMap`
  --> gameplay_sim/src/systems/world/unified_distance_culling.rs:11:5
   |
11 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `culling::*`
  --> gameplay_sim/src/systems/world/mod.rs:33:9
   |
33 | pub use culling::*;
   |         ^^^^^^^^^^

warning: unused import: `performance::*`
  --> gameplay_sim/src/systems/world/mod.rs:35:9
   |
35 | pub use performance::*;
   |         ^^^^^^^^^^^^^^

warning: unused import: `road_network::*`
  --> gameplay_sim/src/systems/world/mod.rs:36:9
   |
36 | pub use road_network::*;
   |         ^^^^^^^^^^^^^^^

warning: unused import: `road_mesh::*`
  --> gameplay_sim/src/systems/world/mod.rs:37:9
   |
37 | pub use road_mesh::*;
   |         ^^^^^^^^^^^^

warning: unused import: `road_generation::*`
  --> gameplay_sim/src/systems/world/mod.rs:38:9
   |
38 | pub use road_generation::*;
   |         ^^^^^^^^^^^^^^^^^^

warning: unused import: `map_system::*`
  --> gameplay_sim/src/systems/world/mod.rs:40:9
   |
40 | pub use map_system::*;
   |         ^^^^^^^^^^^^^

warning: unused import: `unified_lod::*`
  --> gameplay_sim/src/systems/world/mod.rs:44:9
   |
44 | pub use unified_lod::*;
   |         ^^^^^^^^^^^^^^

warning: unused import: `vegetation_lod::*`
  --> gameplay_sim/src/systems/world/mod.rs:48:9
   |
48 | pub use vegetation_lod::*;
   |         ^^^^^^^^^^^^^^^^^

warning: unused imports: `UnifiedCullable` and `unified_distance_culling_system`
  --> gameplay_sim/src/systems/world/mod.rs:51:5
   |
51 |     UnifiedCullable, unified_distance_culling_system
   |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `unified_factory_setup::*`
  --> gameplay_sim/src/systems/world/mod.rs:53:9
   |
53 | pub use unified_factory_setup::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
  --> gameplay_sim/src/systems/timing_service.rs:12:5
   |
12 | use game_core::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy::prelude::*`
 --> gameplay_sim/src/systems/performance_monitor.rs:4:5
  |
4 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
 --> gameplay_sim/src/systems/persistence.rs:5:5
  |
5 | use game_core::prelude::*;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy::prelude::*`
 --> gameplay_sim/src/systems/camera.rs:4:5
  |
4 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
 --> gameplay_sim/src/systems/water.rs:3:5
  |
3 | use game_core::prelude::*;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `bevy::prelude::*`
 --> gameplay_sim/src/systems/effects.rs:1:5
  |
1 | use bevy::prelude::*;
  |     ^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
 --> gameplay_sim/src/factories/entity_builder_unified.rs:3:5
  |
3 | use game_core::prelude::*;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
 --> gameplay_sim/src/factories/rendering_factory.rs:2:5
  |
2 | use game_core::prelude::*;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `entity_factory::*`
  --> gameplay_sim/src/factories/mod.rs:13:9
   |
13 | pub use entity_factory::*;
   |         ^^^^^^^^^^^^^^^^^

warning: unused import: `entity_factory_unified::*`
  --> gameplay_sim/src/factories/mod.rs:14:9
   |
14 | pub use entity_factory_unified::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `entity_builder_unified::*`
  --> gameplay_sim/src/factories/mod.rs:15:9
   |
15 | pub use entity_builder_unified::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `generic_bundle::*`
  --> gameplay_sim/src/factories/mod.rs:20:9
   |
20 | pub use generic_bundle::*;
   |         ^^^^^^^^^^^^^^^^^

warning: unused import: `engine_core::prelude::*`
 --> gameplay_sim/src/prelude.rs:4:9
  |
4 | pub use engine_core::prelude::*;
  |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `engine_bevy::prelude::*`
 --> gameplay_sim/src/prelude.rs:5:9
  |
5 | pub use engine_bevy::prelude::*;
  |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `game_core::prelude::*`
 --> gameplay_sim/src/prelude.rs:6:9
  |
6 | pub use game_core::prelude::*;
  |         ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `error`, `info`, and `warn`
 --> gameplay_sim/src/prelude.rs:7:19
  |
7 | pub use tracing::{info, warn, error, debug};
  |                   ^^^^  ^^^^  ^^^^^  ^^^^^

warning: unused imports: `Assets`, `Commands`, `Component`, `Entity`, `GlobalTransform`, `InheritedVisibility`, `Query`, `Resource`, `StandardMaterial`, and `ViewVisibility`
  --> gameplay_sim/src/compat.rs:6:43
   |
6  |     SpatialBundle, Transform, Visibility, InheritedVisibility, ViewVisibility, GlobalTransform,
   |                                           ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^
7  |     // Query types
8  |     Query,
   |     ^^^^^
9  |     // Other common types
10 |     StandardMaterial, Mesh, Handle, Assets, Commands, Entity, Component, Resource,
   |     ^^^^^^^^^^^^^^^^                ^^^^^^  ^^^^^^^^  ^^^^^^  ^^^^^^^^^  ^^^^^^^^

warning: unused imports: `CHARACTER_GROUP as GAME_CORE_CHARACTER_GROUP`, `STATIC_GROUP as GAME_CORE_STATIC_GROUP`, and `VEHICLE_GROUP as GAME_CORE_VEHICLE_GROUP`
  --> gameplay_sim/src/compat.rs:23:5
   |
23 |     STATIC_GROUP as GAME_CORE_STATIC_GROUP,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
24 |     VEHICLE_GROUP as GAME_CORE_VEHICLE_GROUP,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |     CHARACTER_GROUP as GAME_CORE_CHARACTER_GROUP,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0616]: field `current_time` of struct `systems::timing_service::TimingService` is private
   --> gameplay_sim/src/services/simple_services.rs:104:27
    |
104 |         self.base_service.current_time
    |                           ^^^^^^^^^^^^ private field

error[E0616]: field `delta_time` of struct `systems::timing_service::TimingService` is private
   --> gameplay_sim/src/services/simple_services.rs:108:27
    |
108 |         self.base_service.delta_time
    |                           ^^^^^^^^^^ private field

error[E0609]: no field `max_world_coord` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:107:37
    |
107 |         let bounds = config.physics.max_world_coord;
    |                                     ^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0609]: no field `max_collider_size` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:225:34
    |
225 |         if size > config.physics.max_collider_size || size < config.physics.min_collider_size {
    |                                  ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0609]: no field `min_collider_size` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:225:77
    |
225 |         if size > config.physics.max_collider_size || size < config.physics.min_collider_size {
    |                                                                             ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0609]: no field `min_collider_size` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:227:40
    |
227 |                   size, config.physics.min_collider_size, config.physics.max_collider_size);
    |                                        ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0609]: no field `max_collider_size` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:227:74
    |
227 |                   size, config.physics.min_collider_size, config.physics.max_collider_size);
    |                                                                          ^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0609]: no field `min_mass` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:236:54
    |
236 |         let clamped_mass = mass.clamp(config.physics.min_mass, config.physics.max_mass);
    |                                                      ^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0609]: no field `max_mass` on type `config::PhysicsConfig`
   --> gameplay_sim/src/physics/utilities.rs:236:79
    |
236 |         let clamped_mass = mass.clamp(config.physics.min_mass, config.physics.max_mass);
    |                                                                               ^^^^^^^^ unknown field
    |
    = note: available fields are: `position_clamp`, `max_velocity`, `max_angular_velocity`

error[E0308]: mismatched types
  --> gameplay_sim/src/movement/vehicles.rs:70:56
   |
70 |     PhysicsUtilities::validate_velocity(&mut velocity, &config);
   |     -----------------------------------                ^^^^^^^ expected `&GameConfig`, found `&Res<'_, GameConfig>`
   |     |
   |     arguments to this function are incorrect
   |
   = note: expected reference `&game_core::config::GameConfig`
              found reference `&bevy::prelude::Res<'_, config::GameConfig>`
note: associated function defined here
  --> gameplay_sim/src/systems/physics_utils.rs:24:12
   |
24 |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
   |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/vehicles.rs:202:56
    |
202 |     PhysicsUtilities::validate_velocity(&mut velocity, &config);
    |     -----------------------------------                ^^^^^^^ expected `&GameConfig`, found `&Res<'_, GameConfig>`
    |     |
    |     arguments to this function are incorrect
    |
    = note: expected reference `&game_core::config::GameConfig`
               found reference `&bevy::prelude::Res<'_, config::GameConfig>`
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:24:12
    |
24  |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
    |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0308]: mismatched types
  --> gameplay_sim/src/movement/aircraft.rs:69:56
   |
69 |     PhysicsUtilities::validate_velocity(&mut velocity, &config);
   |     -----------------------------------                ^^^^^^^ expected `&GameConfig`, found `&Res<'_, GameConfig>`
   |     |
   |     arguments to this function are incorrect
   |
   = note: expected reference `&game_core::config::GameConfig`
              found reference `&bevy::prelude::Res<'_, config::GameConfig>`
note: associated function defined here
  --> gameplay_sim/src/systems/physics_utils.rs:24:12
   |
24 |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
   |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/aircraft.rs:215:56
    |
215 |     PhysicsUtilities::validate_velocity(&mut velocity, &config);
    |     -----------------------------------                ^^^^^^^ expected `&GameConfig`, found `&Res<'_, GameConfig>`
    |     |
    |     arguments to this function are incorrect
    |
    = note: expected reference `&game_core::config::GameConfig`
               found reference `&bevy::prelude::Res<'_, config::GameConfig>`
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:24:12
    |
24  |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
    |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/movement/realistic_vehicle_physics.rs:187:8
    |
187 |     if is_accelerating(control_manager) {
    |        ^^^^^^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:401:8
    |
401 | pub fn is_accelerating(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^^^^^^                                   --------------
help: provide the argument
    |
187 |     if is_accelerating(control_manager, /* bevy::prelude::Entity */) {
    |                                       +++++++++++++++++++++++++++++

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/movement/realistic_vehicle_physics.rs:194:8
    |
194 |     if is_braking(control_manager) {
    |        ^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:408:8
    |
408 | pub fn is_braking(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^                                   --------------
help: provide the argument
    |
194 |     if is_braking(control_manager, /* bevy::prelude::Entity */) {
    |                                  +++++++++++++++++++++++++++++

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/realistic_vehicle_physics.rs:420:51
    |
420 |     PhysicsUtilities::validate_velocity(velocity, config);
    |     -----------------------------------           ^^^^^^ expected `game_core::config::GameConfig`, found `config::GameConfig`
    |     |
    |     arguments to this function are incorrect
    |
    = note: `config::GameConfig` and `game_core::config::GameConfig` have similar names, but are actually distinct types
note: `config::GameConfig` is defined in the current crate
   --> gameplay_sim/src/config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::config::GameConfig` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/config/game_config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:24:12
    |
24  |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
    |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/realistic_vehicle_physics.rs:426:63
    |
426 |     PhysicsUtilities::apply_world_bounds(velocity, transform, config);
    |     ------------------------------------                      ^^^^^^ expected `game_core::config::GameConfig`, found `config::GameConfig`
    |     |
    |     arguments to this function are incorrect
    |
    = note: `config::GameConfig` and `game_core::config::GameConfig` have similar names, but are actually distinct types
note: `config::GameConfig` is defined in the current crate
   --> gameplay_sim/src/config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::config::GameConfig` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/config/game_config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:102:12
    |
102 |     pub fn apply_world_bounds(
    |            ^^^^^^^^^^^^^^^^^^
...
105 |         config: &GameConfig
    |         -------------------

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/movement/realistic_vehicle_input.rs:40:8
    |
40  |     if is_accelerating(control_manager) {
    |        ^^^^^^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:401:8
    |
401 | pub fn is_accelerating(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^^^^^^                                   --------------
help: provide the argument
    |
40  |     if is_accelerating(control_manager, /* bevy::prelude::Entity */) {
    |                                       +++++++++++++++++++++++++++++

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/movement/realistic_vehicle_input.rs:47:8
    |
47  |     if is_braking(control_manager) {
    |        ^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:408:8
    |
408 | pub fn is_braking(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^                                   --------------
help: provide the argument
    |
47  |     if is_braking(control_manager, /* bevy::prelude::Entity */) {
    |                                  +++++++++++++++++++++++++++++

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/realistic_vehicle_physics_core.rs:374:51
    |
374 |     PhysicsUtilities::validate_velocity(velocity, config);
    |     -----------------------------------           ^^^^^^ expected `game_core::config::GameConfig`, found `config::GameConfig`
    |     |
    |     arguments to this function are incorrect
    |
    = note: `config::GameConfig` and `game_core::config::GameConfig` have similar names, but are actually distinct types
note: `config::GameConfig` is defined in the current crate
   --> gameplay_sim/src/config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::config::GameConfig` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/config/game_config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:24:12
    |
24  |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
    |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/realistic_vehicle_physics_core.rs:380:63
    |
380 |     PhysicsUtilities::apply_world_bounds(velocity, transform, config);
    |     ------------------------------------                      ^^^^^^ expected `game_core::config::GameConfig`, found `config::GameConfig`
    |     |
    |     arguments to this function are incorrect
    |
    = note: `config::GameConfig` and `game_core::config::GameConfig` have similar names, but are actually distinct types
note: `config::GameConfig` is defined in the current crate
   --> gameplay_sim/src/config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::config::GameConfig` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/config/game_config.rs:7:1
    |
7   | pub struct GameConfig {
    | ^^^^^^^^^^^^^^^^^^^^^
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:102:12
    |
102 |     pub fn apply_world_bounds(
    |            ^^^^^^^^^^^^^^^^^^
...
105 |         config: &GameConfig
    |         -------------------

error[E0308]: mismatched types
   --> gameplay_sim/src/movement/supercar_physics.rs:131:56
    |
131 |     PhysicsUtilities::validate_velocity(&mut velocity, &config);
    |     -----------------------------------                ^^^^^^^ expected `&GameConfig`, found `&Res<'_, GameConfig>`
    |     |
    |     arguments to this function are incorrect
    |
    = note: expected reference `&game_core::config::GameConfig`
               found reference `&bevy::prelude::Res<'_, config::GameConfig>`
note: associated function defined here
   --> gameplay_sim/src/systems/physics_utils.rs:24:12
    |
24  |     pub fn validate_velocity(velocity: &mut Velocity, config: &GameConfig) {
    |            ^^^^^^^^^^^^^^^^^                          -------------------

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/culling.rs:45:32
    |
45  |         let distance_squared = get_cached_distance_squared(
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
46  |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
47  |             entity,
48  |             player_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
49  |             transform.translation,
50  |             &mut distance_cache,
    |             ------------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:188:8
    |
188 | pub fn get_cached_distance_squared(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
45  -         let distance_squared = get_cached_distance_squared(
46  -             active_entity,
47  -             entity,
48  -             player_pos,
49  -             transform.translation,
50  -             &mut distance_cache,
51  -         );
45  +         let distance_squared = get_cached_distance_squared(&mut distance_cache, entity, active_entity, transform.translation, player_pos);
    |

error[E0609]: no field `world` on type `bevy::prelude::Res<'_, config::GameConfig>`
  --> gameplay_sim/src/world/dynamic_content.rs:93:41
   |
93 |         let active_radius = game_config.world.active_radius;
   |                                         ^^^^^ unknown field
   |
   = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0609]: no field `spawn_rates` on type `&config::GameConfig`
   --> gameplay_sim/src/world/dynamic_content.rs:245:83
    |
245 |     if CONTENT_RNG.with(|rng| rng.borrow_mut().gen_range(0.0..1.0)) < game_config.spawn_rates.buildings {
    |                                                                                   ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0308]: mismatched types
   --> gameplay_sim/src/world/dynamic_content.rs:253:22
    |
253 |                 Some(road_network),
    |                 ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |                 |
    |                 arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/world/dynamic_content.rs:253:17
    |
253 |                 Some(road_network),
    |                 ^^^^^------------^
    |                      |
    |                      this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0609]: no field `spawn_rates` on type `&config::GameConfig`
   --> gameplay_sim/src/world/dynamic_content.rs:263:99
    |
263 |     else if on_road && CONTENT_RNG.with(|rng| rng.borrow_mut().gen_range(0.0..1.0)) < game_config.spawn_rates.vehicles {
    |                                                                                                   ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0308]: mismatched types
   --> gameplay_sim/src/world/dynamic_content.rs:270:18
    |
270 |             Some(road_network),
    |             ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/world/dynamic_content.rs:270:13
    |
270 |             Some(road_network),
    |             ^^^^^------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0609]: no field `spawn_rates` on type `&config::GameConfig`
   --> gameplay_sim/src/world/dynamic_content.rs:279:131
    |
279 | ...| rng.borrow_mut().gen_range(0.0..1.0)) < game_config.spawn_rates.trees {
    |                                                          ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0308]: mismatched types
   --> gameplay_sim/src/world/dynamic_content.rs:286:18
    |
286 |             Some(road_network),
    |             ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/world/dynamic_content.rs:286:13
    |
286 |             Some(road_network),
    |             ^^^^^------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0609]: no field `spawn_rates` on type `&config::GameConfig`
   --> gameplay_sim/src/world/dynamic_content.rs:295:88
    |
295 |     else if CONTENT_RNG.with(|rng| rng.borrow_mut().gen_range(0.0..1.0)) < game_config.spawn_rates.npcs {
    |                                                                                        ^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0308]: mismatched types
   --> gameplay_sim/src/world/dynamic_content.rs:302:18
    |
302 |             Some(road_network),
    |             ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/world/dynamic_content.rs:302:13
    |
302 |             Some(road_network),
    |             ^^^^^------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0599]: no variant or associated item named `Cross` found for enum `systems::world::road_network::IntersectionType` in the current scope
   --> gameplay_sim/src/world/road_mesh.rs:382:27
    |
382 |         IntersectionType::Cross => generate_cross_intersection_mesh(intersection, connected_roads),
    |                           ^^^^^ variant or associated item not found in `IntersectionType`
    |
   ::: gameplay_sim/src/systems/world/road_network.rs:176:1
    |
176 | pub enum IntersectionType {
    | ------------------------- variant or associated item `Cross` not found for this enum

error[E0599]: no variant or associated item named `Curve` found for enum `systems::world::road_network::IntersectionType` in the current scope
   --> gameplay_sim/src/world/road_mesh.rs:384:27
    |
384 |         IntersectionType::Curve => generate_curved_intersection_mesh(intersection, connected_roads),
    |                           ^^^^^ variant or associated item not found in `IntersectionType`
    |
   ::: gameplay_sim/src/systems/world/road_network.rs:176:1
    |
176 | pub enum IntersectionType {
    | ------------------------- variant or associated item `Curve` not found for this enum

error[E0599]: no variant or associated item named `HighwayOnramp` found for enum `systems::world::road_network::IntersectionType` in the current scope
   --> gameplay_sim/src/world/road_mesh.rs:385:27
    |
385 |         IntersectionType::HighwayOnramp => generate_onramp_mesh(intersection, connected_roads),
    |                           ^^^^^^^^^^^^^ variant or associated item not found in `IntersectionType`
    |
   ::: gameplay_sim/src/systems/world/road_network.rs:176:1
    |
176 | pub enum IntersectionType {
    | ------------------------- variant or associated item `HighwayOnramp` not found for this enum

error[E0609]: no field `radius` on type `&systems::world::road_network::RoadIntersection`
   --> gameplay_sim/src/world/road_mesh.rs:390:31
    |
390 |     let radius = intersection.radius;
    |                               ^^^^^^ unknown field
    |
    = note: available fields are: `id`, `position`, `connected_roads`, `intersection_type`

error[E0609]: no field `generated_chunks` on type `bevy::prelude::ResMut<'_, systems::world::road_network::RoadNetwork>`
  --> gameplay_sim/src/world/road_generation.rs:73:55
   |
73 |     if road_network.roads.is_empty() && !road_network.generated_chunks.is_empty() {
   |                                                       ^^^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `roads`, `intersections`, `next_road_id`, `next_intersection_id`

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/world/map_system.rs:259:45
    |
259 |     let mut factory = UnifiedEntityFactory::with_config(GameConfig::default());
    |                                             ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
    |
   ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
    |
15  | pub struct UnifiedEntityFactory {
    | ------------------------------- function or associated item `with_config` not found for this struct
    |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
    |
28  |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `state` on type `&systems::world::unified_world::ChunkData`
  --> gameplay_sim/src/world/layered_generation.rs:50:27
   |
50 |         if matches!(chunk.state, ChunkState::Loading) {
   |                           ^^^^^ unknown field
   |
   = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `last_update` on type `&systems::world::unified_world::ChunkData`
  --> gameplay_sim/src/world/layered_generation.rs:53:37
   |
53 |             if current_time - chunk.last_update > 0.2 {
   |                                     ^^^^^^^^^^^ unknown field
   |
help: a field with a similar name exists
   |
53 |             if current_time - chunk.last_updated > 0.2 {
   |                                                +

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
  --> gameplay_sim/src/world/layered_generation.rs:70:31
   |
70 |     let chunk = world_manager.get_chunk_mut(coord);
   |                               ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no variant or associated item named `Vehicles` found for enum `systems::world::unified_world::ContentLayer` in the current scope
  --> gameplay_sim/src/world/layered_generation.rs:79:28
   |
79 |         Some(ContentLayer::Vehicles)
   |                            ^^^^^^^^ variant or associated item not found in `ContentLayer`
   |
  ::: gameplay_sim/src/systems/world/unified_world.rs:31:1
   |
31 | pub enum ContentLayer {
   | --------------------- variant or associated item `Vehicles` not found for this enum

error[E0599]: no method named `calculate_lod_level` found for mutable reference `&mut WorldManager` in the current scope
  --> gameplay_sim/src/world/layered_generation.rs:87:39
   |
87 |         let lod_level = world_manager.calculate_lod_level(distance);
   |                                       ^^^^^^^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
  --> gameplay_sim/src/world/layered_generation.rs:88:35
   |
88 |         let chunk = world_manager.get_chunk_mut(coord); // Re-borrow
   |                                   ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0559]: variant `game_core::components::ChunkState::Loaded` has no field named `lod_level`
  --> gameplay_sim/src/world/layered_generation.rs:89:44
   |
89 |         chunk.state = ChunkState::Loaded { lod_level };
   |                                            ^^^^^^^^^ `game_core::components::ChunkState::Loaded` does not have this field
   |
   = note: available fields are: `entity_count`

error[E0599]: no variant or associated item named `Vehicles` found for enum `systems::world::unified_world::ContentLayer` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:101:28
    |
101 |         Some(ContentLayer::Vehicles) => {
    |                            ^^^^^^^^ variant or associated item not found in `ContentLayer`
    |
   ::: gameplay_sim/src/systems/world/unified_world.rs:31:1
    |
31  | pub enum ContentLayer {
    | --------------------- variant or associated item `Vehicles` not found for this enum

error[E0609]: no field `state` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:125:31
    |
125 |             if matches!(chunk.state, ChunkState::Loading) && !chunk.roads_generated {
    |                               ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `roads_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:125:69
    |
125 |             if matches!(chunk.state, ChunkState::Loading) && !chunk.roads_generated {
    |                                                                     ^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:146:38
    |
146 |     let new_road_ids = world_manager.road_network.generate_chunk_roads(coord.x, coord.z);
    |                                      ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:150:43
    |
150 |         if let Some(road) = world_manager.road_network.roads.get(&road_id).cloned() {
    |                                           ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:173:39
    |
173 |             let chunk = world_manager.get_chunk_mut(coord);
    |                                       ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:182:31
    |
182 |     let chunk = world_manager.get_chunk_mut(coord);
    |                               ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:201:20
    |
201 |             coord: chunk_coord,
    |                    ^^^^^^^^^^^ expected `game_core::components::ChunkCoord`, found `ChunkCoord`
    |
    = note: `ChunkCoord` and `game_core::components::ChunkCoord` have similar names, but are actually distinct types
note: `ChunkCoord` is defined in the current crate
   --> gameplay_sim/src/systems/world/unified_world.rs:40:1
    |
40  | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::ChunkCoord` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/spatial.rs:223:1
    |
223 | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:202:20
    |
202 |             layer: ContentLayer::Roads,
    |                    ^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ContentLayer`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:254:43
    |
254 |     for (road_id, road) in &world_manager.road_network.roads {
    |                                           ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no variant or associated item named `Cross` found for enum `systems::world::road_network::IntersectionType` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:281:63
    |
281 |                     let intersection_type = IntersectionType::Cross;
    |                                                               ^^^^^ variant or associated item not found in `IntersectionType`
    |
   ::: gameplay_sim/src/systems/world/road_network.rs:176:1
    |
176 | pub enum IntersectionType {
    | ------------------------- variant or associated item `Cross` not found for this enum

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:299:45
    |
299 |         let intersection_id = world_manager.road_network.add_intersection(
    |                                             ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:305:51
    |
305 |         if let Some(intersection) = world_manager.road_network.intersections.get(&intersection_id) {
    |                                                   ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:318:39
    |
318 |             let chunk = world_manager.get_chunk_mut(coord);
    |                                       ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:378:20
    |
378 |             coord: chunk_coord,
    |                    ^^^^^^^^^^^ expected `game_core::components::ChunkCoord`, found `ChunkCoord`
    |
    = note: `ChunkCoord` and `game_core::components::ChunkCoord` have similar names, but are actually distinct types
note: `ChunkCoord` is defined in the current crate
   --> gameplay_sim/src/systems/world/unified_world.rs:40:1
    |
40  | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::ChunkCoord` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/spatial.rs:223:1
    |
223 | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:379:20
    |
379 |             layer: ContentLayer::Roads,
    |                    ^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ContentLayer`

error[E0061]: this function takes 0 arguments but 2 arguments were supplied
   --> gameplay_sim/src/world/layered_generation.rs:393:29
    |
393 |     let intersection_mesh = generate_intersection_mesh(intersection, &[]);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ ------------  --- unexpected argument #2 of type `&[_; 0]`
    |                                                        |
    |                                                        unexpected argument #1 of type `&systems::world::road_network::RoadIntersection`
    |
note: function defined here
   --> gameplay_sim/src/systems/world/road_mesh.rs:345:8
    |
345 | pub fn generate_intersection_mesh() -> Option<Mesh> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
help: remove the extra arguments
    |
393 -     let intersection_mesh = generate_intersection_mesh(intersection, &[]);
393 +     let intersection_mesh = generate_intersection_mesh();
    |

error[E0277]: the trait bound `std::option::Option<bevy::prelude::Mesh>: Into<bevy::prelude::Mesh>` is not satisfied
   --> gameplay_sim/src/world/layered_generation.rs:395:27
    |
395 |         Mesh3d(meshes.add(intersection_mesh)),
    |                       --- ^^^^^^^^^^^^^^^^^ the trait `bevy::prelude::MeshBuilder` is not implemented for `std::option::Option<bevy::prelude::Mesh>`
    |                       |
    |                       required by a bound introduced by this call
    |
    = help: the following other types implement trait `bevy::prelude::MeshBuilder`:
              AnnulusMeshBuilder
              Capsule2dMeshBuilder
              Capsule3dMeshBuilder
              CircleMeshBuilder
              CircularSectorMeshBuilder
              CircularSegmentMeshBuilder
              ConeMeshBuilder
              ConicalFrustumMeshBuilder
            and 14 others
    = note: required for `bevy::prelude::Mesh` to implement `From<std::option::Option<bevy::prelude::Mesh>>`
    = note: required for `std::option::Option<bevy::prelude::Mesh>` to implement `Into<bevy::prelude::Mesh>`
note: required by a bound in `bevy::prelude::Assets::<A>::add`
   --> /Users/bradyjeong/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bevy_asset-0.16.1/src/assets.rs:387:39
    |
387 |     pub fn add(&mut self, asset: impl Into<A>) -> Handle<A> {
    |                                       ^^^^^^^ required by this bound in `Assets::<A>::add`

error[E0609]: no field `state` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:416:31
    |
416 |             if matches!(chunk.state, ChunkState::Loading) 
    |                               ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `roads_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:417:26
    |
417 |                 && chunk.roads_generated 
    |                          ^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `buildings_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:418:27
    |
418 |                 && !chunk.buildings_generated {
    |                           ^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:454:57
    |
454 |         if !is_on_road_unified(position, &world_manager.road_network) {
    |                                                         ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:479:43
    |
479 |                 let chunk = world_manager.get_chunk_mut(coord);
    |                                           ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:486:31
    |
486 |     let chunk = world_manager.get_chunk_mut(coord);
    |                               ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:503:45
    |
503 |     let mut factory = UnifiedEntityFactory::with_config(GameConfig::default());
    |                                             ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
    |
   ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
    |
15  | pub struct UnifiedEntityFactory {
    | ------------------------------- function or associated item `with_config` not found for this struct
    |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
    |
28  |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:511:28
    |
511 |                     coord: chunk_coord,
    |                            ^^^^^^^^^^^ expected `game_core::components::ChunkCoord`, found `ChunkCoord`
    |
    = note: `ChunkCoord` and `game_core::components::ChunkCoord` have similar names, but are actually distinct types
note: `ChunkCoord` is defined in the current crate
   --> gameplay_sim/src/systems/world/unified_world.rs:40:1
    |
40  | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::ChunkCoord` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/spatial.rs:223:1
    |
223 | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:512:28
    |
512 |                     layer: ContentLayer::Buildings,
    |                            ^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ContentLayer`

error[E0609]: no field `state` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:538:31
    |
538 |             if matches!(chunk.state, ChunkState::Loading) 
    |                               ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `buildings_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:539:26
    |
539 |                 && chunk.buildings_generated 
    |                          ^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `vehicles_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:540:27
    |
540 |                 && !chunk.vehicles_generated {
    |                           ^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:572:56
    |
572 |         if is_on_road_unified(position, &world_manager.road_network) {
    |                                                        ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:595:43
    |
595 |                 let chunk = world_manager.get_chunk_mut(coord);
    |                                           ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:602:31
    |
602 |     let chunk = world_manager.get_chunk_mut(coord);
    |                               ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:618:45
    |
618 |     let mut factory = UnifiedEntityFactory::with_config(GameConfig::default());
    |                                             ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
    |
   ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
    |
15  | pub struct UnifiedEntityFactory {
    | ------------------------------- function or associated item `with_config` not found for this struct
    |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
    |
28  |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:626:28
    |
626 |                     coord: chunk_coord,
    |                            ^^^^^^^^^^^ expected `game_core::components::ChunkCoord`, found `ChunkCoord`
    |
    = note: `ChunkCoord` and `game_core::components::ChunkCoord` have similar names, but are actually distinct types
note: `ChunkCoord` is defined in the current crate
   --> gameplay_sim/src/systems/world/unified_world.rs:40:1
    |
40  | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::ChunkCoord` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/spatial.rs:223:1
    |
223 | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no variant or associated item named `Vehicles` found for enum `systems::world::unified_world::ContentLayer` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:627:42
    |
627 |                     layer: ContentLayer::Vehicles,
    |                                          ^^^^^^^^ variant or associated item not found in `ContentLayer`
    |
   ::: gameplay_sim/src/systems/world/unified_world.rs:31:1
    |
31  | pub enum ContentLayer {
    | --------------------- variant or associated item `Vehicles` not found for this enum

error[E0609]: no field `state` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:653:31
    |
653 |             if matches!(chunk.state, ChunkState::Loading) 
    |                               ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `vehicles_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:654:26
    |
654 |                 && chunk.vehicles_generated 
    |                          ^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `vegetation_generated` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/layered_generation.rs:655:27
    |
655 |                 && !chunk.vegetation_generated {
    |                           ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `road_network` on type `&mut WorldManager`
   --> gameplay_sim/src/world/layered_generation.rs:687:57
    |
687 |         if !is_on_road_unified(position, &world_manager.road_network) {
    |                                                         ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:710:43
    |
710 |                 let chunk = world_manager.get_chunk_mut(coord);
    |                                           ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no method named `get_chunk_mut` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:717:31
    |
717 |     let chunk = world_manager.get_chunk_mut(coord);
    |                               ^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/world/layered_generation.rs:733:45
    |
733 |     let mut factory = UnifiedEntityFactory::with_config(GameConfig::default());
    |                                             ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
    |
   ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
    |
15  | pub struct UnifiedEntityFactory {
    | ------------------------------- function or associated item `with_config` not found for this struct
    |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
    |
28  |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:741:28
    |
741 |                     coord: chunk_coord,
    |                            ^^^^^^^^^^^ expected `game_core::components::ChunkCoord`, found `ChunkCoord`
    |
    = note: `ChunkCoord` and `game_core::components::ChunkCoord` have similar names, but are actually distinct types
note: `ChunkCoord` is defined in the current crate
   --> gameplay_sim/src/systems/world/unified_world.rs:40:1
    |
40  | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::ChunkCoord` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/spatial.rs:223:1
    |
223 | pub struct ChunkCoord {
    | ^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/world/layered_generation.rs:742:28
    |
742 |                     layer: ContentLayer::Vegetation,
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `ContentLayer`

error[E0599]: no method named `get_chunk` found for struct `bevy::prelude::ResMut<'_, WorldManager>` in the current scope
   --> gameplay_sim/src/world/unified_lod.rs:178:44
    |
178 |         if let Some(chunk) = world_manager.get_chunk(chunk_entity.coord) {
    |                                            ^^^^^^^^^ method not found in `ResMut<'_, WorldManager>`

error[E0026]: variant `game_core::components::ChunkState::Loaded` does not have a field named `lod_level`
   --> gameplay_sim/src/world/unified_lod.rs:180:38
    |
180 |                 ChunkState::Loaded { lod_level } => {
    |                                      ^^^^^^^^^
    |                                      |
    |                                      variant `game_core::components::ChunkState::Loaded` does not have this field
    |                                      help: `game_core::components::ChunkState::Loaded` has a field named `entity_count`

error[E0027]: pattern does not mention field `entity_count`
   --> gameplay_sim/src/world/unified_lod.rs:180:17
    |
180 |                 ChunkState::Loaded { lod_level } => {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `entity_count`
    |
help: include the missing field in the pattern
    |
180 |                 ChunkState::Loaded { lod_level, entity_count } => {
    |                                               ++++++++++++++
help: if you don't care about this missing field, you can explicitly ignore it
    |
180 |                 ChunkState::Loaded { lod_level, entity_count: _ } => {
    |                                               +++++++++++++++++
help: or always ignore missing fields here
    |
180 |                 ChunkState::Loaded { lod_level, .. } => {
    |                                               ++++

error[E0308]: mismatched types
   --> gameplay_sim/src/world/unified_lod.rs:181:45
    |
181 |                     should_layer_be_visible(chunk_entity.layer, lod_level, chunk.distance_to_player)
    |                     ----------------------- ^^^^^^^^^^^^^^^^^^ expected `ContentLayer`, found `u32`
    |                     |
    |                     arguments to this function are incorrect
    |
note: function defined here
   --> gameplay_sim/src/world/unified_lod.rs:233:4
    |
233 | fn should_layer_be_visible(layer: ContentLayer, lod_level: usize, distance: f32) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^^^^ -------------------

error[E0609]: no field `state` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/unified_lod.rs:213:61
    |
213 |             if let ChunkState::Loaded { lod_level } = chunk.state {
    |                                                             ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0026]: variant `game_core::components::ChunkState::Loaded` does not have a field named `lod_level`
   --> gameplay_sim/src/world/unified_lod.rs:213:41
    |
213 |             if let ChunkState::Loaded { lod_level } = chunk.state {
    |                                         ^^^^^^^^^
    |                                         |
    |                                         variant `game_core::components::ChunkState::Loaded` does not have this field
    |                                         help: `game_core::components::ChunkState::Loaded` has a field named `entity_count`

error[E0027]: pattern does not mention field `entity_count`
   --> gameplay_sim/src/world/unified_lod.rs:213:20
    |
213 |             if let ChunkState::Loaded { lod_level } = chunk.state {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing field `entity_count`
    |
help: include the missing field in the pattern
    |
213 |             if let ChunkState::Loaded { lod_level, entity_count } = chunk.state {
    |                                                  ++++++++++++++
help: if you don't care about this missing field, you can explicitly ignore it
    |
213 |             if let ChunkState::Loaded { lod_level, entity_count: _ } = chunk.state {
    |                                                  +++++++++++++++++
help: or always ignore missing fields here
    |
213 |             if let ChunkState::Loaded { lod_level, .. } = chunk.state {
    |                                                  ++++

error[E0609]: no field `coord` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/unified_lod.rs:214:58
    |
214 |                 let distance = active_pos.distance(chunk.coord.to_world_pos());
    |                                                          ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0599]: no method named `calculate_lod_level` found for mutable reference `&mut WorldManager` in the current scope
   --> gameplay_sim/src/world/unified_lod.rs:223:37
    |
223 |         let new_lod = world_manager.calculate_lod_level(distance);
    |                                     ^^^^^^^^^^^^^^^^^^^ method not found in `&mut WorldManager`

error[E0609]: no field `distance_to_player` on type `&mut systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/unified_lod.rs:226:23
    |
226 |                 chunk.distance_to_player = distance;
    |                       ^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `state` on type `&mut systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/unified_lod.rs:227:23
    |
227 |                 chunk.state = ChunkState::Loaded { lod_level: new_lod };
    |                       ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0559]: variant `game_core::components::ChunkState::Loaded` has no field named `lod_level`
   --> gameplay_sim/src/world/unified_lod.rs:227:52
    |
227 |                 chunk.state = ChunkState::Loaded { lod_level: new_lod };
    |                                                    ^^^^^^^^^ `game_core::components::ChunkState::Loaded` does not have this field
    |
    = note: available fields are: `entity_count`

error[E0599]: no variant or associated item named `Vehicles` found for enum `systems::world::unified_world::ContentLayer` in the current scope
   --> gameplay_sim/src/world/unified_lod.rs:243:23
    |
243 |         ContentLayer::Vehicles => {
    |                       ^^^^^^^^ variant or associated item not found in `ContentLayer`
    |
   ::: gameplay_sim/src/systems/world/unified_world.rs:31:1
    |
31  | pub enum ContentLayer {
    | --------------------- variant or associated item `Vehicles` not found for this enum

error[E0599]: no variant or associated item named `NPCs` found for enum `systems::world::unified_world::ContentLayer` in the current scope
   --> gameplay_sim/src/world/unified_lod.rs:256:23
    |
256 |         ContentLayer::NPCs => {
    |                       ^^^^ variant or associated item not found in `ContentLayer`
    |
   ::: gameplay_sim/src/systems/world/unified_world.rs:31:1
    |
31  | pub enum ContentLayer {
    | --------------------- variant or associated item `NPCs` not found for this enum

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/unified_lod.rs:292:24
    |
292 |         let distance = get_cached_distance(
    |                        ^^^^^^^^^^^^^^^^^^^
293 |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
294 |             entity,
295 |             active_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
296 |             transform.translation,
297 |             distance_cache,
    |             -------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:177:8
    |
177 | pub fn get_cached_distance(
    |        ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
292 -         let distance = get_cached_distance(
293 -             active_entity,
294 -             entity,
295 -             active_pos,
296 -             transform.translation,
297 -             distance_cache,
298 -         );
292 +         let distance = get_cached_distance(distance_cache, entity, active_entity, transform.translation, active_pos);
    |

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/unified_lod.rs:364:24
    |
364 |         let distance = get_cached_distance(
    |                        ^^^^^^^^^^^^^^^^^^^
365 |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
366 |             entity,
367 |             active_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
368 |             transform.translation,
369 |             distance_cache,
    |             -------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:177:8
    |
177 | pub fn get_cached_distance(
    |        ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
364 -         let distance = get_cached_distance(
365 -             active_entity,
366 -             entity,
367 -             active_pos,
368 -             transform.translation,
369 -             distance_cache,
370 -         );
364 +         let distance = get_cached_distance(distance_cache, entity, active_entity, transform.translation, active_pos);
    |

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/unified_lod.rs:437:24
    |
437 |         let distance = get_cached_distance(
    |                        ^^^^^^^^^^^^^^^^^^^
438 |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
439 |             entity,
440 |             active_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
441 |             transform.translation,
442 |             distance_cache,
    |             -------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:177:8
    |
177 | pub fn get_cached_distance(
    |        ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
437 -         let distance = get_cached_distance(
438 -             active_entity,
439 -             entity,
440 -             active_pos,
441 -             transform.translation,
442 -             distance_cache,
443 -         );
437 +         let distance = get_cached_distance(distance_cache, entity, active_entity, transform.translation, active_pos);
    |

error[E0609]: no field `state` on type `&&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/unified_lod.rs:579:40
    |
579 |         .filter(|chunk| matches!(chunk.state, ChunkState::Loaded { .. }))
    |                                        ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `max_chunks_per_frame` on type `bevy::prelude::ResMut<'_, WorldManager>`
   --> gameplay_sim/src/world/unified_lod.rs:618:23
    |
618 |         world_manager.max_chunks_per_frame = (world_manager.max_chunks_per_frame.saturating_sub(1)).max(1);
    |                       ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `max_chunks_per_frame` on type `bevy::prelude::ResMut<'_, WorldManager>`
   --> gameplay_sim/src/world/unified_lod.rs:618:61
    |
618 |         world_manager.max_chunks_per_frame = (world_manager.max_chunks_per_frame.saturating_sub(1)).max(1);
    |                                                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `max_chunks_per_frame` on type `bevy::prelude::ResMut<'_, WorldManager>`
   --> gameplay_sim/src/world/unified_lod.rs:621:23
    |
621 |         world_manager.max_chunks_per_frame = (world_manager.max_chunks_per_frame + 1).min(8);
    |                       ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `max_chunks_per_frame` on type `bevy::prelude::ResMut<'_, WorldManager>`
   --> gameplay_sim/src/world/unified_lod.rs:621:61
    |
621 |         world_manager.max_chunks_per_frame = (world_manager.max_chunks_per_frame + 1).min(8);
    |                                                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `coord` on type `&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/world/unified_lod.rs:669:67
    |
669 |                 .map(|chunk| transform.translation.distance(chunk.coord.to_world_pos()))
    |                                                                   ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0599]: no variant or associated item named `NPCLOD` found for enum `systems::timing_service::SystemType` in the current scope
  --> gameplay_sim/src/world/npc_lod.rs:36:54
   |
36 |     if !timing_service.should_run_system(SystemType::NPCLOD) {
   |                                                      ^^^^^^ variant or associated item not found in `SystemType`
   |
  ::: gameplay_sim/src/systems/timing_service.rs:24:1
   |
24 | pub enum SystemType {
   | ------------------- variant or associated item `NPCLOD` not found for this enum

error[E0599]: no variant or associated item named `NPCLOD` found for enum `systems::timing_service::EntityTimerType` in the current scope
  --> gameplay_sim/src/world/npc_lod.rs:46:69
   |
46 |             timing_service.register_entity(entity, EntityTimerType::NPCLOD, 0.1);
   |                                                                     ^^^^^^ variant or associated item not found in `EntityTimerType`
   |
  ::: gameplay_sim/src/systems/timing_service.rs:40:1
   |
40 | pub enum EntityTimerType {
   | ------------------------ variant or associated item `NPCLOD` not found for this enum

error[E0599]: no function or associated item named `new` found for struct `systems::timing_service::ManagedTiming` in the current scope
   --> gameplay_sim/src/world/npc_lod.rs:47:59
    |
47  |             commands.entity(entity).insert(ManagedTiming::new(EntityTimerType::NPCLOD));
    |                                                           ^^^ function or associated item not found in `ManagedTiming`
    |
   ::: gameplay_sim/src/systems/timing_service.rs:168:1
    |
168 | pub struct ManagedTiming {
    | ------------------------ function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `BinnedPhaseItem`
            candidate #2: `RelationshipSourceCollection`
            candidate #3: `UniformSampler`
            candidate #4: `foldhash::convenience::HashMapExt`
            candidate #5: `foldhash::convenience::HashSetExt`
            candidate #6: `itertools::adaptors::coalesce::CountItem`
            candidate #7: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #8: `rstar::point::PointExt`
            candidate #9: `spade::triangulation::Triangulation`
            candidate #10: `typenum::marker_traits::Bit`
            candidate #11: `wgpu::dispatch::InstanceInterface`

error[E0599]: no variant or associated item named `NPCLOD` found for enum `systems::timing_service::EntityTimerType` in the current scope
  --> gameplay_sim/src/world/npc_lod.rs:47:80
   |
47 |             commands.entity(entity).insert(ManagedTiming::new(EntityTimerType::NPCLOD));
   |                                                                                ^^^^^^ variant or associated item not found in `EntityTimerType`
   |
  ::: gameplay_sim/src/systems/timing_service.rs:40:1
   |
40 | pub enum EntityTimerType {
   | ------------------------ variant or associated item `NPCLOD` not found for this enum

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/npc_lod.rs:55:24
    |
55  |         let distance = get_cached_distance(
    |                        ^^^^^^^^^^^^^^^^^^^
56  |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
57  |             entity,
58  |             player_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
59  |             transform.translation,
60  |             &mut distance_cache,
    |             ------------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:177:8
    |
177 | pub fn get_cached_distance(
    |        ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
55  -         let distance = get_cached_distance(
56  -             active_entity,
57  -             entity,
58  -             player_pos,
59  -             transform.translation,
60  -             &mut distance_cache,
61  -         );
55  +         let distance = get_cached_distance(&mut distance_cache, entity, active_entity, transform.translation, player_pos);
    |

error[E0599]: no function or associated item named `create_mesh_and_material` found for struct `rendering_factory::RenderingFactory` in the current scope
   --> gameplay_sim/src/world/npc_lod.rs:159:54
    |
159 |             let (mesh, material) = RenderingFactory::create_mesh_and_material(
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `RenderingFactory`
    |
   ::: gameplay_sim/src/factories/rendering_factory.rs:6:1
    |
6   | pub struct RenderingFactory;
    | --------------------------- function or associated item `create_mesh_and_material` not found for this struct
    |
note: if you're trying to build a new `rendering_factory::RenderingFactory`, consider using `rendering_factory::RenderingFactory::new` which returns `rendering_factory::RenderingFactory`
   --> gameplay_sim/src/factories/rendering_factory.rs:9:5
    |
9   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_mesh_and_material` found for struct `rendering_factory::RenderingFactory` in the current scope
   --> gameplay_sim/src/world/npc_lod.rs:167:54
    |
167 |             let (mesh, material) = RenderingFactory::create_mesh_and_material(
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `RenderingFactory`
    |
   ::: gameplay_sim/src/factories/rendering_factory.rs:6:1
    |
6   | pub struct RenderingFactory;
    | --------------------------- function or associated item `create_mesh_and_material` not found for this struct
    |
note: if you're trying to build a new `rendering_factory::RenderingFactory`, consider using `rendering_factory::RenderingFactory::new` which returns `rendering_factory::RenderingFactory`
   --> gameplay_sim/src/factories/rendering_factory.rs:9:5
    |
9   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0616]: field `current_time` of struct `systems::timing_service::TimingService` is private
  --> gameplay_sim/src/world/npc_spawn.rs:42:23
   |
42 |     if timing_service.current_time % 10.0 < 0.1 {  // REDUCED: From 5.0 to 10.0 seconds
   |                       ^^^^^^^^^^^^ private field

error[E0599]: no function or associated item named `new` found for struct `systems::timing_service::ManagedTiming` in the current scope
   --> gameplay_sim/src/world/npc_spawn.rs:216:28
    |
216 |             ManagedTiming::new(EntityTimerType::NPCLOD),
    |                            ^^^ function or associated item not found in `ManagedTiming`
    |
   ::: gameplay_sim/src/systems/timing_service.rs:168:1
    |
168 | pub struct ManagedTiming {
    | ------------------------ function or associated item `new` not found for this struct
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `new`, perhaps you need to implement one of them:
            candidate #1: `BinnedPhaseItem`
            candidate #2: `RelationshipSourceCollection`
            candidate #3: `UniformSampler`
            candidate #4: `foldhash::convenience::HashMapExt`
            candidate #5: `foldhash::convenience::HashSetExt`
            candidate #6: `itertools::adaptors::coalesce::CountItem`
            candidate #7: `parking_lot_core::thread_parker::ThreadParkerT`
            candidate #8: `rstar::point::PointExt`
            candidate #9: `spade::triangulation::Triangulation`
            candidate #10: `typenum::marker_traits::Bit`
            candidate #11: `wgpu::dispatch::InstanceInterface`

error[E0599]: no variant or associated item named `NPCLOD` found for enum `systems::timing_service::EntityTimerType` in the current scope
   --> gameplay_sim/src/world/npc_spawn.rs:216:49
    |
216 |             ManagedTiming::new(EntityTimerType::NPCLOD),
    |                                                 ^^^^^^ variant or associated item not found in `EntityTimerType`
    |
   ::: gameplay_sim/src/systems/timing_service.rs:40:1
    |
40  | pub enum EntityTimerType {
    | ------------------------ variant or associated item `NPCLOD` not found for this enum

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/vegetation_lod.rs:41:24
    |
41  |         let distance = get_cached_distance(
    |                        ^^^^^^^^^^^^^^^^^^^
42  |             entity,
    |             ------ expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
43  |             Entity::from_raw(0), // Use entity ID 0 as player placeholder
44  |             transform.translation,
    |             --------------------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
45  |             active_pos,
46  |             &mut distance_cache,
    |             ------------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:177:8
    |
177 | pub fn get_cached_distance(
    |        ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
41  -         let distance = get_cached_distance(
42  -             entity,
43  -             Entity::from_raw(0), // Use entity ID 0 as player placeholder
44  -             transform.translation,
45  -             active_pos,
46  -             &mut distance_cache,
47  -         );
41  +         let distance = get_cached_distance(&mut distance_cache, Entity::from_raw(0), entity, active_pos, transform.translation);
    |

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/world/unified_distance_culling.rs:212:32
    |
212 |         let distance_squared = get_cached_distance_squared(
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
213 |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
214 |             entity,
215 |             player_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
216 |             transform.translation,
217 |             &mut distance_cache,
    |             ------------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:188:8
    |
188 | pub fn get_cached_distance_squared(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
212 -         let distance_squared = get_cached_distance_squared(
213 -             active_entity,
214 -             entity,
215 -             player_pos,
216 -             transform.translation,
217 -             &mut distance_cache,
218 -         );
212 +         let distance_squared = get_cached_distance_squared(&mut distance_cache, entity, active_entity, transform.translation, player_pos);
    |

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
  --> gameplay_sim/src/world/unified_factory_setup.rs:18:41
   |
18 |     let factory = UnifiedEntityFactory::with_config(config.clone());
   |                                         ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
   |
  ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
   |
15 | pub struct UnifiedEntityFactory {
   | ------------------------------- function or associated item `with_config` not found for this struct
   |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
  --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
   |
28 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:38:58
   |
38 |         let (buildings, vehicles, npcs, trees) = factory.entity_limits.get_counts();
   |                                                          ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:48:32
   |
48 |             buildings, factory.entity_limits.max_buildings, 
   |                                ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:49:41
   |
49 |             (buildings as f32 / factory.entity_limits.max_buildings as f32) * 100.0,
   |                                         ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:50:31
   |
50 |             vehicles, factory.entity_limits.max_vehicles,
   |                               ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:51:40
   |
51 |             (vehicles as f32 / factory.entity_limits.max_vehicles as f32) * 100.0,
   |                                        ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:52:27
   |
52 |             npcs, factory.entity_limits.max_npcs,
   |                           ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:53:36
   |
53 |             (npcs as f32 / factory.entity_limits.max_npcs as f32) * 100.0,
   |                                    ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:54:28
   |
54 |             trees, factory.entity_limits.max_trees,
   |                            ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:55:37
   |
55 |             (trees as f32 / factory.entity_limits.max_trees as f32) * 100.0,
   |                                     ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `position_cache` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/world/unified_factory_setup.rs:56:21
   |
56 |             factory.position_cache.len()
   |                     ^^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0369]: cannot multiply `(f32, f32)` by `(f32, f32)`
   --> gameplay_sim/src/distance/unified_distance_calculator.rs:110:45
    |
110 |             let distance_squared = distance * distance;
    |                                    -------- ^ -------- (f32, f32)
    |                                    |
    |                                    (f32, f32)

error[E0308]: mismatched types
   --> gameplay_sim/src/distance/unified_distance_calculator.rs:113:17
    |
113 |                 distance,
    |                 ^^^^^^^^ expected `f32`, found `(f32, f32)`
    |
    = note: expected type `f32`
              found tuple `(f32, f32)`

error[E0609]: no field `world` on type `&config::GameConfig`
  --> gameplay_sim/src/lod/modern_lod_system.rs:79:32
   |
79 |     let lod_distances = config.world.lod_distances;
   |                                ^^^^^ unknown field
   |
   = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0609]: no field `npc` on type `&config::GameConfig`
  --> gameplay_sim/src/lod/modern_lod_system.rs:88:29
   |
88 |     let intervals = &config.npc.update_intervals;
   |                             ^^^ unknown field
   |
   = note: available fields are: `max_entities`, `lod_distances`, `physics`

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/vehicles/lod_manager.rs:38:24
    |
38  |         let distance = get_cached_distance(
    |                        ^^^^^^^^^^^^^^^^^^^
39  |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
40  |             entity,
41  |             player_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
42  |             transform.translation,
43  |             &mut distance_cache,
    |             ------------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:177:8
    |
177 | pub fn get_cached_distance(
    |        ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
38  -         let distance = get_cached_distance(
39  -             active_entity,
40  -             entity,
41  -             player_pos,
42  -             transform.translation,
43  -             &mut distance_cache,
44  -         );
38  +         let distance = get_cached_distance(&mut distance_cache, entity, active_entity, transform.translation, player_pos);
    |

error[E0599]: no function or associated item named `create_vehicle_metallic` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:147:49
    |
147 |                 MeshMaterial3d(MaterialFactory::create_vehicle_metallic(materials, vehicle_state.color)),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_vehicle_metallic` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `vehicle_chassis` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:148:35
    |
148 |                 TransformFactory::vehicle_chassis(),
    |                                   ^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `vehicle_chassis` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `vehicle_spawn` with a similar name
   --> gameplay_sim/src/factories/transform_factory.rs:22:5
    |
22  |     pub fn vehicle_spawn(x: f32, z: f32) -> Transform {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_standard_wheel` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:157:41
    |
157 |                     Mesh3d(MeshFactory::create_standard_wheel(meshes)),
    |                                         ^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_standard_wheel` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_wheel_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:158:53
    |
158 |                     MeshMaterial3d(MaterialFactory::create_wheel_material(materials)),
    |                                                     ^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_wheel_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_metallic_material` with a similar name, but with different arguments
   --> gameplay_sim/src/factories/material_factory.rs:90:5
    |
90  | /     pub fn create_metallic_material(
91  | |         &self,
92  | |         materials: &mut ResMut<Assets<StandardMaterial>>,
93  | |         metallic: f32,
94  | |         roughness: f32,
95  | |     ) -> Handle<StandardMaterial> {
    | |_________________________________^

error[E0599]: no function or associated item named `wheel_with_rotation` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:159:39
    |
159 |                     TransformFactory::wheel_with_rotation(x, -0.35, z),
    |                                       ^^^^^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `wheel_with_rotation` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `with_rotation` with a similar name
   --> gameplay_sim/src/factories/transform_factory.rs:55:5
    |
55  |     pub fn with_rotation(position: Vec3, rotation: Quat) -> Transform {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_car_body` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:168:37
    |
168 |                 Mesh3d(MeshFactory::create_car_body(meshes)),
    |                                     ^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_car_body` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_sports_car_body` with a similar name
    |
168 |                 Mesh3d(MeshFactory::create_sports_car_body(meshes)),
    |                                            +++++++

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:169:49
    |
169 |                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, vehicle_state.color)),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
169 -                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, vehicle_state.color)),
169 +                 MeshMaterial3d(MaterialFactory::create_emissive_material(materials, vehicle_state.color)),
    |

error[E0599]: no function or associated item named `vehicle_body_center` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:170:35
    |
170 |                 TransformFactory::vehicle_body_center(),
    |                                   ^^^^^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `vehicle_body_center` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:180:49
    |
180 |                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.25, 0.28, 0.3))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
180 -                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.25, 0.28, 0.3))),
180 +                 MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgb(0.25, 0.28, 0.3))),
    |

error[E0599]: no function or associated item named `helicopter_body` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:181:35
    |
181 |                 TransformFactory::helicopter_body(),
    |                                   ^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `helicopter_body` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `helicopter_spawn` with a similar name
   --> gameplay_sim/src/factories/transform_factory.rs:31:5
    |
31  |     pub fn helicopter_spawn(x: f32, y: f32, z: f32) -> Transform {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_helicopter_cockpit` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:189:37
    |
189 |                 Mesh3d(MeshFactory::create_helicopter_cockpit(meshes)),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_helicopter_cockpit` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_helicopter_body` with a similar name
    |
189 -                 Mesh3d(MeshFactory::create_helicopter_cockpit(meshes)),
189 +                 Mesh3d(MeshFactory::create_helicopter_body(meshes)),
    |

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:190:49
    |
190 |                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgba(0.05, 0.05, 0.08, 0.3))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
190 -                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgba(0.05, 0.05, 0.08, 0.3))),
190 +                 MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgba(0.05, 0.05, 0.08, 0.3))),
    |

error[E0599]: no function or associated item named `create_helicopter_tail_boom` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:199:37
    |
199 |                 Mesh3d(MeshFactory::create_helicopter_tail_boom(meshes)),
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_helicopter_tail_boom` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_helicopter_body` with a similar name
    |
199 -                 Mesh3d(MeshFactory::create_helicopter_tail_boom(meshes)),
199 +                 Mesh3d(MeshFactory::create_helicopter_body(meshes)),
    |

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:200:49
    |
200 |                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.25, 0.28, 0.3))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
200 -                 MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.25, 0.28, 0.3))),
200 +                 MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgb(0.25, 0.28, 0.3))),
    |

error[E0599]: no function or associated item named `create_rotor_blade` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:211:41
    |
211 |                     Mesh3d(MeshFactory::create_rotor_blade(meshes)),
    |                                         ^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_rotor_blade` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_water_plane` with a similar name
   --> gameplay_sim/src/factories/mesh_factory.rs:49:5
    |
49  |     pub fn create_water_plane(meshes: &mut ResMut<Assets<Mesh>>, size: f32) -> Handle<Mesh> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:212:53
    |
212 |                     MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.08, 0.08, 0.08))),
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
212 -                     MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.08, 0.08, 0.08))),
212 +                     MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgb(0.08, 0.08, 0.08))),
    |

error[E0599]: no function or associated item named `create_landing_skid` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:223:41
    |
223 |                     Mesh3d(MeshFactory::create_landing_skid(meshes)),
    |                                         ^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_landing_skid` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:224:53
    |
224 |                     MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.35, 0.35, 0.35))),
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
224 -                     MeshMaterial3d(MaterialFactory::create_simple_material(materials, Color::srgb(0.35, 0.35, 0.35))),
224 +                     MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgb(0.35, 0.35, 0.35))),
    |

error[E0599]: no function or associated item named `create_aircraft_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:236:49
    |
236 |                 MeshMaterial3d(MaterialFactory::create_aircraft_material(materials, Color::srgb(0.4, 0.4, 0.5))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_aircraft_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
236 -                 MeshMaterial3d(MaterialFactory::create_aircraft_material(materials, Color::srgb(0.4, 0.4, 0.5))),
236 +                 MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgb(0.4, 0.4, 0.5))),
    |

error[E0599]: no function or associated item named `helicopter_body` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:237:35
    |
237 |                 TransformFactory::helicopter_body(),
    |                                   ^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `helicopter_body` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `helicopter_spawn` with a similar name
   --> gameplay_sim/src/factories/transform_factory.rs:31:5
    |
31  |     pub fn helicopter_spawn(x: f32, y: f32, z: f32) -> Transform {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_aircraft_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:246:49
    |
246 |                 MeshMaterial3d(MaterialFactory::create_aircraft_material(materials, Color::srgb(0.4, 0.4, 0.5))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_aircraft_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
246 -                 MeshMaterial3d(MaterialFactory::create_aircraft_material(materials, Color::srgb(0.4, 0.4, 0.5))),
246 +                 MeshMaterial3d(MaterialFactory::create_emissive_material(materials, Color::srgb(0.4, 0.4, 0.5))),
    |

error[E0599]: no function or associated item named `landing_skid_left` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:247:35
    |
247 |                 TransformFactory::landing_skid_left(),
    |                                   ^^^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `landing_skid_left` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_custom_cuboid` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:274:29
    |
274 |         Mesh3d(MeshFactory::create_custom_cuboid(meshes, size.x, size.y, size.z)),
    |                             ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_custom_cuboid` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_simple_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:275:41
    |
275 |         MeshMaterial3d(MaterialFactory::create_simple_material(materials, color)),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_simple_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
    |
275 -         MeshMaterial3d(MaterialFactory::create_simple_material(materials, color)),
275 +         MeshMaterial3d(MaterialFactory::create_emissive_material(materials, color)),
    |

error[E0599]: no function or associated item named `vehicle_body_center` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:276:27
    |
276 |         TransformFactory::vehicle_body_center(),
    |                           ^^^^^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `vehicle_body_center` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_custom_cuboid` found for struct `mesh_factory::MeshFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:299:29
    |
299 |         Mesh3d(MeshFactory::create_custom_cuboid(meshes, size.x, size.y, size.z)),
    |                             ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MeshFactory`
    |
   ::: gameplay_sim/src/factories/mesh_factory.rs:5:1
    |
5   | pub struct MeshFactory;
    | ---------------------- function or associated item `create_custom_cuboid` not found for this struct
    |
note: if you're trying to build a new `mesh_factory::MeshFactory`, consider using `mesh_factory::MeshFactory::new` which returns `mesh_factory::MeshFactory`
   --> gameplay_sim/src/factories/mesh_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `create_low_detail_material` found for struct `material_factory::MaterialFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:300:41
    |
300 |         MeshMaterial3d(MaterialFactory::create_low_detail_material(materials, vehicle_state.color)),
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
    |
   ::: gameplay_sim/src/factories/material_factory.rs:6:1
    |
6   | pub struct MaterialFactory {
    | -------------------------- function or associated item `create_low_detail_material` not found for this struct
    |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
   --> gameplay_sim/src/factories/material_factory.rs:18:5
    |
18  |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_metallic_material` with a similar name, but with different arguments
   --> gameplay_sim/src/factories/material_factory.rs:90:5
    |
90  | /     pub fn create_metallic_material(
91  | |         &self,
92  | |         materials: &mut ResMut<Assets<StandardMaterial>>,
93  | |         metallic: f32,
94  | |         roughness: f32,
95  | |     ) -> Handle<StandardMaterial> {
    | |_________________________________^

error[E0599]: no function or associated item named `vehicle_body_center` found for struct `transform_factory::TransformFactory` in the current scope
   --> gameplay_sim/src/vehicles/lod_manager.rs:301:27
    |
301 |         TransformFactory::vehicle_body_center(),
    |                           ^^^^^^^^^^^^^^^^^^^ function or associated item not found in `TransformFactory`
    |
   ::: gameplay_sim/src/factories/transform_factory.rs:5:1
    |
5   | pub struct TransformFactory;
    | --------------------------- function or associated item `vehicle_body_center` not found for this struct
    |
note: if you're trying to build a new `transform_factory::TransformFactory`, consider using `transform_factory::TransformFactory::new` which returns `transform_factory::TransformFactory`
   --> gameplay_sim/src/factories/transform_factory.rs:8:5
    |
8   |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of undeclared type `PositionType`
  --> gameplay_sim/src/setup/world.rs:31:32
   |
31 |                 position_type: PositionType::Absolute,
   |                                ^^^^^^^^^^^^ use of undeclared type `PositionType`

error[E0433]: failed to resolve: use of undeclared type `Val`
  --> gameplay_sim/src/setup/world.rs:32:22
   |
32 |                 top: Val::Px(20.0),
   |                      ^^^ use of undeclared type `Val`

error[E0433]: failed to resolve: use of undeclared type `Val`
  --> gameplay_sim/src/setup/world.rs:33:23
   |
33 |                 left: Val::Px(20.0),
   |                       ^^^ use of undeclared type `Val`

error[E0433]: failed to resolve: use of undeclared type `Val`
  --> gameplay_sim/src/setup/world.rs:34:24
   |
34 |                 width: Val::Px(400.0),
   |                        ^^^ use of undeclared type `Val`

error[E0433]: failed to resolve: use of undeclared type `Val`
  --> gameplay_sim/src/setup/world.rs:35:25
   |
35 |                 height: Val::Auto,
   |                         ^^^ use of undeclared type `Val`

error[E0433]: failed to resolve: use of undeclared type `UiRect`
  --> gameplay_sim/src/setup/world.rs:36:26
   |
36 |                 padding: UiRect::all(Val::Px(10.0)),
   |                          ^^^^^^
   |                          |
   |                          use of undeclared type `UiRect`
   |                          help: a struct with a similar name exists: `URect`

error[E0433]: failed to resolve: use of undeclared type `Val`
  --> gameplay_sim/src/setup/world.rs:36:38
   |
36 |                 padding: UiRect::all(Val::Px(10.0)),
   |                                      ^^^ use of undeclared type `Val`

error[E0425]: cannot find function, tuple struct or tuple variant `BackgroundColor` in this scope
  --> gameplay_sim/src/setup/world.rs:39:13
   |
39 |             BackgroundColor(Color::srgba(0.0, 0.0, 0.0, 0.7)),
   |             ^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of undeclared type `BorderRadius`
  --> gameplay_sim/src/setup/world.rs:40:13
   |
40 |             BorderRadius::all(Val::Px(5.0)),
   |             ^^^^^^^^^^^^ use of undeclared type `BorderRadius`

error[E0433]: failed to resolve: use of undeclared type `Val`
  --> gameplay_sim/src/setup/world.rs:40:31
   |
40 |             BorderRadius::all(Val::Px(5.0)),
   |                               ^^^ use of undeclared type `Val`

error[E0433]: failed to resolve: use of undeclared type `Text`
  --> gameplay_sim/src/setup/world.rs:47:17
   |
47 |                 Text::new("CONTROLS - Walking:\n\nArrow Keys: Move\nF: Enter Vehicle"),
   |                 ^^^^ use of undeclared type `Text`

error[E0425]: cannot find function, tuple struct or tuple variant `TextColor` in this scope
  --> gameplay_sim/src/setup/world.rs:52:17
   |
52 |                 TextColor(Color::WHITE),
   |                 ^^^^^^^^^ not found in this scope

error[E0277]: `(HumanMovement, HumanAnimation, HumanBehavior, ..., ..., ..., ...)` is not a `Bundle`
    --> gameplay_sim/src/setup/world.rs:98:43
     |
98   |       commands.entity(player_entity).insert((
     |  ____________________________________------_^
     | |                                    |
     | |                                    required by a bound introduced by this call
99   | |         HumanMovement::default(),
100  | |         HumanAnimation::default(),
101  | |         HumanBehavior::default(),
...    |
105  | |         MovementTracker::new(Vec3::new(0.0, 1.0, 0.0), 5.0), // Track movement with 5m threshold
106  | |     ));
     | |_____^ invalid `Bundle`
     |
     = help: the trait `bevy::prelude::Bundle` is not implemented for `(HumanMovement, HumanAnimation, HumanBehavior, ..., ..., ..., ...)`
     = note: consider annotating `(HumanMovement, HumanAnimation, HumanBehavior, ..., ..., ..., ...)` with `#[derive(Component)]` or `#[derive(Bundle)]`
     = help: the following other types implement trait `bevy::prelude::Bundle`:
               ()
               (B,)
               (B0, B1)
               (B0, B1, B2)
               (B0, B1, B2, B3)
               (B0, B1, B2, B3, B4)
               (B0, B1, B2, B3, B4, B5)
               (B0, B1, B2, B3, B4, B5, B6)
             and 8 others
note: required by a bound in `bevy::prelude::EntityCommands::<'a>::insert`
    --> /Users/bradyjeong/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bevy_ecs-0.16.1/src/system/commands/mod.rs:1385:43
     |
1385 |     pub fn insert(&mut self, bundle: impl Bundle) -> &mut Self {
     |                                           ^^^^^^ required by this bound in `EntityCommands::<'a>::insert`
     = note: the full name for the type has been written to '/Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/target/debug/deps/gameplay_sim-e2e6f610f7cd1794.long-type-899252319486390609.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
  --> gameplay_sim/src/setup/unified_vehicles.rs:35:52
   |
35 |     let mut entity_factory = UnifiedEntityFactory::with_config(config.clone());
   |                                                    ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
   |
  ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
   |
15 | pub struct UnifiedEntityFactory {
   | ------------------------------- function or associated item `with_config` not found for this struct
   |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
  --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
   |
28 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `validate_position` found for mutable reference `&mut entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/setup/unified_vehicles.rs:117:55
    |
117 |         let validated_position = match entity_factory.validate_position(final_position) {
    |                                                       ^^^^^^^^^^^^^^^^^ method not found in `&mut UnifiedEntityFactory`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `validate_position`, perhaps you need to implement it:
            candidate #1: `game_core::prelude::PhysicsWorld`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:139:32
    |
139 |                 entity_factory.config.physics.vehicle_group(),
    |                                ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:140:58
    |
140 |                 Group::from_bits_truncate(entity_factory.config.physics.static_group |
    |                                                          ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:141:32
    |
141 |                 entity_factory.config.physics.vehicle_group |
    |                                ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:142:32
    |
142 |                 entity_factory.config.physics.character_group)
    |                                ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0599]: no function or associated item named `vehicle` found for struct `systems::world::unified_distance_culling::UnifiedCullable` in the current scope
   --> gameplay_sim/src/setup/unified_vehicles.rs:147:44
    |
147 |                 cullable: UnifiedCullable::vehicle(),
    |                                            ^^^^^^^ function or associated item not found in `UnifiedCullable`
    |
   ::: gameplay_sim/src/systems/world/unified_distance_culling.rs:18:1
    |
18  | pub struct UnifiedCullable {
    | -------------------------- function or associated item `vehicle` not found for this struct

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/setup/unified_vehicles.rs:163:38
    |
163 |         if let Some(safe_position) = SpawnValidator::spawn_entity_safely(
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
164 |             spawn_registry,
165 |             validated_position,
    |             ------------------ expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
166 |             SpawnableType::Vehicle,
    |             ---------------------- expected `bevy::prelude::Vec3`, found `systems::spawn_validation::SpawnableType`
167 |             vehicle_entity,
    |             -------------- expected `systems::spawn_validation::SpawnableType`, found `bevy::prelude::Entity`
    |
note: associated function defined here
   --> gameplay_sim/src/systems/spawn_validation.rs:281:12
    |
281 |     pub fn spawn_entity_safely(
    |            ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
163 -         if let Some(safe_position) = SpawnValidator::spawn_entity_safely(
164 -             spawn_registry,
165 -             validated_position,
166 -             SpawnableType::Vehicle,
167 -             vehicle_entity,
168 -         ) {
163 +         if let Some(safe_position) = SpawnValidator::spawn_entity_safely(spawn_registry, vehicle_entity, validated_position, SpawnableType::Vehicle) {
    |

error[E0599]: no method named `validate_position` found for mutable reference `&mut entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/setup/unified_vehicles.rs:214:51
    |
214 |     let validated_position = match entity_factory.validate_position(final_position) {
    |                                                   ^^^^^^^^^^^^^^^^^ method not found in `&mut UnifiedEntityFactory`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `validate_position`, perhaps you need to implement it:
            candidate #1: `game_core::prelude::PhysicsWorld`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:237:28
    |
237 |             entity_factory.config.physics.vehicle_group(),
    |                            ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:238:54
    |
238 |             Group::from_bits_truncate(entity_factory.config.physics.static_group |
    |                                                      ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:239:28
    |
239 |             entity_factory.config.physics.vehicle_group |
    |                            ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:240:28
    |
240 |             entity_factory.config.physics.character_group)
    |                            ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0599]: no function or associated item named `vehicle` found for struct `systems::world::unified_distance_culling::UnifiedCullable` in the current scope
   --> gameplay_sim/src/setup/unified_vehicles.rs:245:40
    |
245 |             cullable: UnifiedCullable::vehicle(),
    |                                        ^^^^^^^ function or associated item not found in `UnifiedCullable`
    |
   ::: gameplay_sim/src/systems/world/unified_distance_culling.rs:18:1
    |
18  | pub struct UnifiedCullable {
    | -------------------------- function or associated item `vehicle` not found for this struct

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/setup/unified_vehicles.rs:278:34
    |
278 |     if let Some(safe_position) = SpawnValidator::spawn_entity_safely(
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
279 |         spawn_registry,
280 |         validated_position,
    |         ------------------ expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
281 |         SpawnableType::Vehicle,
    |         ---------------------- expected `bevy::prelude::Vec3`, found `systems::spawn_validation::SpawnableType`
282 |         supercar_entity,
    |         --------------- expected `systems::spawn_validation::SpawnableType`, found `bevy::prelude::Entity`
    |
note: associated function defined here
   --> gameplay_sim/src/systems/spawn_validation.rs:281:12
    |
281 |     pub fn spawn_entity_safely(
    |            ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
278 -     if let Some(safe_position) = SpawnValidator::spawn_entity_safely(
279 -         spawn_registry,
280 -         validated_position,
281 -         SpawnableType::Vehicle,
282 -         supercar_entity,
283 -     ) {
278 +     if let Some(safe_position) = SpawnValidator::spawn_entity_safely(spawn_registry, supercar_entity, validated_position, SpawnableType::Vehicle) {
    |

error[E0599]: no method named `validate_position` found for mutable reference `&mut entity_factory::UnifiedEntityFactory` in the current scope
   --> gameplay_sim/src/setup/unified_vehicles.rs:350:55
    |
350 |         let validated_position = match entity_factory.validate_position(final_position) {
    |                                                       ^^^^^^^^^^^^^^^^^ method not found in `&mut UnifiedEntityFactory`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `validate_position`, perhaps you need to implement it:
            candidate #1: `game_core::prelude::PhysicsWorld`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:372:32
    |
372 |                 entity_factory.config.physics.vehicle_group(),
    |                                ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:373:58
    |
373 |                 Group::from_bits_truncate(entity_factory.config.physics.static_group |
    |                                                          ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:374:32
    |
374 |                 entity_factory.config.physics.vehicle_group |
    |                                ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0609]: no field `config` on type `&mut entity_factory::UnifiedEntityFactory`
   --> gameplay_sim/src/setup/unified_vehicles.rs:375:32
    |
375 |                 entity_factory.config.physics.character_group)
    |                                ^^^^^^ unknown field
    |
    = note: available field is: `limit_manager`

error[E0599]: no function or associated item named `vehicle` found for struct `systems::world::unified_distance_culling::UnifiedCullable` in the current scope
   --> gameplay_sim/src/setup/unified_vehicles.rs:380:44
    |
380 |                 cullable: UnifiedCullable::vehicle(),
    |                                            ^^^^^^^ function or associated item not found in `UnifiedCullable`
    |
   ::: gameplay_sim/src/systems/world/unified_distance_culling.rs:18:1
    |
18  | pub struct UnifiedCullable {
    | -------------------------- function or associated item `vehicle` not found for this struct

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/setup/unified_vehicles.rs:401:38
    |
401 |         if let Some(safe_position) = SpawnValidator::spawn_entity_safely(
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
402 |             spawn_registry,
403 |             validated_position,
    |             ------------------ expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
404 |             SpawnableType::Vehicle,
    |             ---------------------- expected `bevy::prelude::Vec3`, found `systems::spawn_validation::SpawnableType`
405 |             vehicle_entity,
    |             -------------- expected `systems::spawn_validation::SpawnableType`, found `bevy::prelude::Entity`
    |
note: associated function defined here
   --> gameplay_sim/src/systems/spawn_validation.rs:281:12
    |
281 |     pub fn spawn_entity_safely(
    |            ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
401 -         if let Some(safe_position) = SpawnValidator::spawn_entity_safely(
402 -             spawn_registry,
403 -             validated_position,
404 -             SpawnableType::Vehicle,
405 -             vehicle_entity,
406 -         ) {
401 +         if let Some(safe_position) = SpawnValidator::spawn_entity_safely(spawn_registry, vehicle_entity, validated_position, SpawnableType::Vehicle) {
    |

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
  --> gameplay_sim/src/setup/unified_npcs.rs:24:52
   |
24 |     let mut entity_factory = UnifiedEntityFactory::with_config(game_config.clone());
   |                                                    ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
   |
  ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
   |
15 | pub struct UnifiedEntityFactory {
   | ------------------------------- function or associated item `with_config` not found for this struct
   |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
  --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
   |
28 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/setup/unified_aircraft.rs:90:25
    |
90  |     let safe_position = SpawnValidator::spawn_entity_safely(
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
91  |         spawn_registry,
92  |         spawn_position,
    |         -------------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
93  |         SpawnableType::Vehicle,
    |         ---------------------- expected `bevy::prelude::Vec3`, found `systems::spawn_validation::SpawnableType`
94  |         Entity::PLACEHOLDER, // Will be updated after spawn
    |         ------------------- expected `systems::spawn_validation::SpawnableType`, found `bevy::prelude::Entity`
    |
note: associated function defined here
   --> gameplay_sim/src/systems/spawn_validation.rs:281:12
    |
281 |     pub fn spawn_entity_safely(
    |            ^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
90  -     let safe_position = SpawnValidator::spawn_entity_safely(
91  -         spawn_registry,
92  -         spawn_position,
93  -         SpawnableType::Vehicle,
94  -         Entity::PLACEHOLDER, // Will be updated after spawn
95  -     );
90  +     let safe_position = SpawnValidator::spawn_entity_safely(spawn_registry, Entity::PLACEHOLDER, spawn_position, SpawnableType::Vehicle);
    |

error[E0599]: no function or associated item named `vehicle` found for struct `systems::world::unified_distance_culling::UnifiedCullable` in the current scope
   --> gameplay_sim/src/setup/unified_aircraft.rs:144:26
    |
144 |         UnifiedCullable::vehicle(), // Aircraft visible from far
    |                          ^^^^^^^ function or associated item not found in `UnifiedCullable`
    |
   ::: gameplay_sim/src/systems/world/unified_distance_culling.rs:18:1
    |
18  | pub struct UnifiedCullable {
    | -------------------------- function or associated item `vehicle` not found for this struct

error[E0599]: no function or associated item named `vehicle` found for struct `systems::world::unified_distance_culling::UnifiedCullable` in the current scope
   --> gameplay_sim/src/setup/unified_aircraft.rs:248:26
    |
248 |         UnifiedCullable::vehicle(), // Aircraft visible from far
    |                          ^^^^^^^ function or associated item not found in `UnifiedCullable`
    |
   ::: gameplay_sim/src/systems/world/unified_distance_culling.rs:18:1
    |
18  | pub struct UnifiedCullable {
    | -------------------------- function or associated item `vehicle` not found for this struct

error[E0609]: no field `road_network` on type `bevy::prelude::ResMut<'_, WorldManager>`
  --> gameplay_sim/src/plugins/unified_world_plugin.rs:97:19
   |
97 |     world_manager.road_network.reset();
   |                   ^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `state` on type `&&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:116:44
    |
116 |             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loaded { .. }))
    |                                            ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `state` on type `&&systems::world::unified_world::ChunkData`
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:120:44
    |
120 |             .filter(|chunk| matches!(chunk.state, crate::systems::world::unified_world::ChunkState::Loading))
    |                                            ^^^^^ unknown field
    |
    = note: available fields are: `entities`, `last_updated`, `is_loaded`

error[E0609]: no field `road_network` on type `bevy::prelude::Res<'_, WorldManager>`
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:127:60
    |
127 |         println!("  🛣️ Roads generated: {}", world_manager.road_network.roads.len());
    |                                                           ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0609]: no field `active_chunk` on type `bevy::prelude::Res<'_, WorldManager>`
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:128:58
    |
128 |         println!("  🎯 Active chunk: {:?}", world_manager.active_chunk);
    |                                                           ^^^^^^^^^^^^ unknown field
    |
help: a field with a similar name exists
    |
128 |         println!("  🎯 Active chunk: {:?}", world_manager.active_chunks);
    |                                                                       +

error[E0609]: no field `max_chunks_per_frame` on type `bevy::prelude::Res<'_, WorldManager>`
   --> gameplay_sim/src/plugins/unified_world_plugin.rs:129:60
    |
129 |         println!("  ⚡ Max chunks/frame: {}", world_manager.max_chunks_per_frame);
    |                                                             ^^^^^^^^^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `chunks`, `active_chunks`, `placement_grid`

error[E0599]: no function or associated item named `create_rendering_entity` found for struct `rendering_factory::RenderingFactory` in the current scope
  --> gameplay_sim/src/water.rs:16:42
   |
16 |     let basin_entity = RenderingFactory::create_rendering_entity(
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `RenderingFactory`
   |
  ::: gameplay_sim/src/factories/rendering_factory.rs:6:1
   |
6  | pub struct RenderingFactory;
   | --------------------------- function or associated item `create_rendering_entity` not found for this struct
   |
note: if you're trying to build a new `rendering_factory::RenderingFactory`, consider using `rendering_factory::RenderingFactory::new` which returns `rendering_factory::RenderingFactory`
  --> gameplay_sim/src/factories/rendering_factory.rs:9:5
   |
9  |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_rendered_entity` with a similar name
  --> gameplay_sim/src/factories/rendering_factory.rs:14:5
   |
14 | /     pub fn create_rendered_entity(
15 | |         commands: &mut Commands,
16 | |         mesh: Handle<Mesh>,
17 | |         material: Handle<StandardMaterial>,
18 | |         position: Vec3,
19 | |     ) -> Entity {
   | |_______________^

error[E0599]: no function or associated item named `create_rendering_entity` found for struct `rendering_factory::RenderingFactory` in the current scope
  --> gameplay_sim/src/water.rs:36:42
   |
36 |     let water_entity = RenderingFactory::create_rendering_entity(
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `RenderingFactory`
   |
  ::: gameplay_sim/src/factories/rendering_factory.rs:6:1
   |
6  | pub struct RenderingFactory;
   | --------------------------- function or associated item `create_rendering_entity` not found for this struct
   |
note: if you're trying to build a new `rendering_factory::RenderingFactory`, consider using `rendering_factory::RenderingFactory::new` which returns `rendering_factory::RenderingFactory`
  --> gameplay_sim/src/factories/rendering_factory.rs:9:5
   |
9  |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_rendered_entity` with a similar name
  --> gameplay_sim/src/factories/rendering_factory.rs:14:5
   |
14 | /     pub fn create_rendered_entity(
15 | |         commands: &mut Commands,
16 | |         mesh: Handle<Mesh>,
17 | |         material: Handle<StandardMaterial>,
18 | |         position: Vec3,
19 | |     ) -> Entity {
   | |_______________^

error[E0599]: no function or associated item named `create_water_bottom_material` found for struct `material_factory::MaterialFactory` in the current scope
  --> gameplay_sim/src/water.rs:67:41
   |
67 |         MeshMaterial3d(MaterialFactory::create_water_bottom_material(&mut materials, Color::srgb(0.2, 0.15, 0.1))),
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `MaterialFactory`
   |
  ::: gameplay_sim/src/factories/material_factory.rs:6:1
   |
6  | pub struct MaterialFactory {
   | -------------------------- function or associated item `create_water_bottom_material` not found for this struct
   |
note: if you're trying to build a new `material_factory::MaterialFactory`, consider using `material_factory::MaterialFactory::new` which returns `material_factory::MaterialFactory`
  --> gameplay_sim/src/factories/material_factory.rs:18:5
   |
18 |     pub fn new(materials: &mut ResMut<Assets<StandardMaterial>>) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: there is a method `create_emissive_material` with a similar name
   |
67 -         MeshMaterial3d(MaterialFactory::create_water_bottom_material(&mut materials, Color::srgb(0.2, 0.15, 0.1))),
67 +         MeshMaterial3d(MaterialFactory::create_emissive_material(&mut materials, Color::srgb(0.2, 0.15, 0.1))),
   |

error[E0599]: no function or associated item named `create_rendering_entity` found for struct `rendering_factory::RenderingFactory` in the current scope
  --> gameplay_sim/src/water.rs:81:38
   |
81 |     let yacht_id = RenderingFactory::create_rendering_entity(
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `RenderingFactory`
   |
  ::: gameplay_sim/src/factories/rendering_factory.rs:6:1
   |
6  | pub struct RenderingFactory;
   | --------------------------- function or associated item `create_rendering_entity` not found for this struct
   |
note: if you're trying to build a new `rendering_factory::RenderingFactory`, consider using `rendering_factory::RenderingFactory::new` which returns `rendering_factory::RenderingFactory`
  --> gameplay_sim/src/factories/rendering_factory.rs:9:5
   |
9  |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^
help: there is an associated function `create_rendered_entity` with a similar name
  --> gameplay_sim/src/factories/rendering_factory.rs:14:5
   |
14 | /     pub fn create_rendered_entity(
15 | |         commands: &mut Commands,
16 | |         mesh: Handle<Mesh>,
17 | |         material: Handle<StandardMaterial>,
18 | |         position: Vec3,
19 | |     ) -> Entity {
   | |_______________^

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/water.rs:112:24
    |
112 |         MeshMaterial3d(MaterialFactory::create_metallic_material(&mut materials, Color::srgb(0.8, 0.8, 0.9), 0.3, 0.4)),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------  -------------------------- unexpected argument #2 of type `bevy::prelude::Color`
    |                                                                  |
    |                                                                  argument #1 of type `&material_factory::MaterialFactory` is missing
    |
note: method defined here
   --> gameplay_sim/src/factories/material_factory.rs:90:12
    |
90  |     pub fn create_metallic_material(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
91  |         &self,
    |         -----
help: did you mean
    |
112 -         MeshMaterial3d(MaterialFactory::create_metallic_material(&mut materials, Color::srgb(0.8, 0.8, 0.9), 0.3, 0.4)),
112 +         MeshMaterial3d(MaterialFactory::create_metallic_material(/* &material_factory::MaterialFactory */, &mut materials, 0.3, 0.4)),
    |

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/water.rs:120:24
    |
120 |         MeshMaterial3d(MaterialFactory::create_metallic_material(&mut materials, Color::srgb(0.6, 0.4, 0.2), 0.1, 0.8)),
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --------------  -------------------------- unexpected argument #2 of type `bevy::prelude::Color`
    |                                                                  |
    |                                                                  argument #1 of type `&material_factory::MaterialFactory` is missing
    |
note: method defined here
   --> gameplay_sim/src/factories/material_factory.rs:90:12
    |
90  |     pub fn create_metallic_material(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
91  |         &self,
    |         -----
help: did you mean
    |
120 -         MeshMaterial3d(MaterialFactory::create_metallic_material(&mut materials, Color::srgb(0.6, 0.4, 0.2), 0.1, 0.8)),
120 +         MeshMaterial3d(MaterialFactory::create_metallic_material(/* &material_factory::MaterialFactory */, &mut materials, 0.1, 0.8)),
    |

error[E0308]: mismatched types
  --> gameplay_sim/src/bevy16_compat.rs:43:9
   |
41 | impl<'w, 's, D: QueryData, F: QueryFilter> QueryExt<'w, 's, D, F> for Query<'w, 's, D, F> {
   |              - expected this type parameter
42 |     fn get_single(&self) -> Result<D::Item<'w>, bevy::ecs::query::QuerySingleError> {
   |                             ------------------------------------------------------- expected `std::result::Result<<D as QueryData>::Item<'w>, QuerySingleError>` because of return type
43 |         self.single()
   |         ^^^^^^^^^^^^^ expected `Result<<D as QueryData>::Item<'_>, ...>`, found `Result<..., ...>`
   |
   = note: expected enum `std::result::Result<<D as QueryData>::Item<'w>, _>`
              found enum `std::result::Result<<<D as QueryData>::ReadOnly as QueryData>::Item<'_>, _>`
help: consider further restricting this bound
   |
41 | impl<'w, 's, D: QueryData<ReadOnly = D>, F: QueryFilter> QueryExt<'w, 's, D, F> for Query<'w, 's, D, F> {
   |                          ++++++++++++++

error[E0308]: mismatched types
  --> gameplay_sim/src/bevy16_compat.rs:58:9
   |
57 |     fn despawn_recursive(&mut self) -> &mut Self {
   |                                        --------- expected `&mut bevy::prelude::EntityCommands<'_>` because of return type
58 |         self.despawn()
   |         ^^^^^^^^^^^^^^ expected `&mut EntityCommands<'_>`, found `()`
   |
note: method `despawn` modifies its receiver in-place
  --> gameplay_sim/src/bevy16_compat.rs:58:14
   |
58 |         self.despawn()
   |         ---- ^^^^^^^ this call modifies `self` in-place
   |         |
   |         you probably want to use this value after calling the method...
   = note: ...instead of the `()` output of method `despawn`

warning: use of deprecated method `bevy::prelude::Query::<'w, 's, D, F>::get_single_mut`: Please use `single_mut` instead
  --> gameplay_sim/src/systems/human_behavior.rs:47:82
   |
47 |     let Ok((mut emotions, mut behavior, mut movement, animation)) = player_query.get_single_mut() else {
   |                                                                                  ^^^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

error[E0609]: no field `base_walk_speed` on type `Mut<'_, game_core::components::HumanMovement>`
  --> gameplay_sim/src/systems/human_behavior.rs:97:14
   |
97 |     movement.base_walk_speed = match emotions.mood {
   |              ^^^^^^^^^^^^^^^ unknown field
   |
   = note: available fields are: `acceleration`, `deceleration`, `max_speed`, `current_speed`, `target_velocity` ... and 5 others

error[E0609]: no field `is_fidgeting` on type `Mut<'_, game_core::components::HumanAnimation>`
   --> gameplay_sim/src/systems/human_behavior.rs:117:23
    |
117 |             animation.is_fidgeting = true;
    |                       ^^^^^^^^^^^^ unknown field
    |
    = note: available fields are: `walk_cycle_time`, `step_frequency`, `head_bob_amplitude`, `body_sway_amplitude`, `breathing_rate` ... and 4 others

error[E0599]: no variant or associated item named `Emergency` found for enum `systems::input::control_manager::ControlAction` in the current scope
   --> gameplay_sim/src/systems/input/control_manager.rs:310:47
    |
26  | pub enum ControlAction {
    | ---------------------- variant or associated item `Emergency` not found for this enum
...
310 |         self.is_control_active(ControlAction::Emergency)
    |                                               ^^^^^^^^^ variant or associated item not found in `ControlAction`

error[E0599]: no method named `get_active_actions` found for reference `&systems::input::control_manager::ControlManager` in the current scope
   --> gameplay_sim/src/systems/input/control_manager.rs:402:21
    |
402 |     control_manager.get_active_actions(entity)
    |                     ^^^^^^^^^^^^^^^^^^
    |
help: there is a method `get_active_entity` with a similar name, but with different arguments
   --> gameplay_sim/src/systems/input/control_manager.rs:178:5
    |
178 |     pub fn get_active_entity(&self) -> Option<Entity> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: no method named `get_active_actions` found for reference `&systems::input::control_manager::ControlManager` in the current scope
   --> gameplay_sim/src/systems/input/control_manager.rs:409:21
    |
409 |     control_manager.get_active_actions(entity)
    |                     ^^^^^^^^^^^^^^^^^^
    |
help: there is a method `get_active_entity` with a similar name, but with different arguments
   --> gameplay_sim/src/systems/input/control_manager.rs:178:5
    |
178 |     pub fn get_active_entity(&self) -> Option<Entity> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::Query::<'w, 's, D, F>::get_single`: Please use `single` instead
  --> gameplay_sim/src/systems/interaction.rs:24:73
   |
24 |             if let Ok((player_entity, player_transform)) = player_query.get_single() {
   |                                                                         ^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::Query::<'w, 's, D, F>::get_single`: Please use `single` instead
  --> gameplay_sim/src/systems/interaction.rs:66:85
   |
66 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                                                                     ^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::Query::<'w, 's, D, F>::get_single`: Please use `single` instead
  --> gameplay_sim/src/systems/interaction.rs:81:85
   |
81 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                                                                     ^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::Query::<'w, 's, D, F>::get_single`: Please use `single` instead
  --> gameplay_sim/src/systems/interaction.rs:96:85
   |
96 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                                                                     ^^^^^^^^^^

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/systems/movement/realistic_vehicle_physics.rs:160:8
    |
160 |     if is_accelerating(control_manager) {
    |        ^^^^^^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:401:8
    |
401 | pub fn is_accelerating(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^^^^^^                                   --------------
help: provide the argument
    |
160 |     if is_accelerating(control_manager, /* bevy::prelude::Entity */) {
    |                                       +++++++++++++++++++++++++++++

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/systems/movement/realistic_vehicle_physics.rs:166:8
    |
166 |     if is_braking(control_manager) {
    |        ^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:408:8
    |
408 | pub fn is_braking(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^                                   --------------
help: provide the argument
    |
166 |     if is_braking(control_manager, /* bevy::prelude::Entity */) {
    |                                  +++++++++++++++++++++++++++++

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/systems/movement/realistic_vehicle_input.rs:39:8
    |
39  |     if is_accelerating(control_manager) {
    |        ^^^^^^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:401:8
    |
401 | pub fn is_accelerating(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^^^^^^                                   --------------
help: provide the argument
    |
39  |     if is_accelerating(control_manager, /* bevy::prelude::Entity */) {
    |                                       +++++++++++++++++++++++++++++

error[E0061]: this function takes 2 arguments but 1 argument was supplied
   --> gameplay_sim/src/systems/movement/realistic_vehicle_input.rs:45:8
    |
45  |     if is_braking(control_manager) {
    |        ^^^^^^^^^^----------------- argument #2 of type `bevy::prelude::Entity` is missing
    |
note: function defined here
   --> gameplay_sim/src/systems/input/control_manager.rs:408:8
    |
408 | pub fn is_braking(control_manager: &ControlManager, entity: Entity) -> bool {
    |        ^^^^^^^^^^                                   --------------
help: provide the argument
    |
45  |     if is_braking(control_manager, /* bevy::prelude::Entity */) {
    |                                  +++++++++++++++++++++++++++++

error[E0369]: cannot multiply `(f32, f32)` by `(f32, f32)`
   --> gameplay_sim/src/systems/unified_distance_calculator.rs:107:45
    |
107 |             let distance_squared = distance * distance;
    |                                    -------- ^ -------- (f32, f32)
    |                                    |
    |                                    (f32, f32)

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/unified_distance_calculator.rs:110:17
    |
110 |                 distance,
    |                 ^^^^^^^^ expected `f32`, found `(f32, f32)`
    |
    = note: expected type `f32`
              found tuple `(f32, f32)`

error[E0308]: arguments to this function are incorrect
   --> gameplay_sim/src/systems/world/culling.rs:42:32
    |
42  |         let distance_squared = get_cached_distance_squared(
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
43  |             active_entity,
    |             ------------- expected `&mut distance_cache::DistanceCache`, found `bevy::prelude::Entity`
44  |             entity,
45  |             player_pos,
    |             ---------- expected `bevy::prelude::Entity`, found `bevy::prelude::Vec3`
46  |             transform.translation,
47  |             &mut distance_cache,
    |             ------------------- expected `bevy::prelude::Vec3`, found `&mut bevy::prelude::ResMut<'_, distance_cache::DistanceCache>`
    |
note: function defined here
   --> gameplay_sim/src/systems/distance_cache.rs:188:8
    |
188 | pub fn get_cached_distance_squared(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: reorder these arguments
    |
42  -         let distance_squared = get_cached_distance_squared(
43  -             active_entity,
44  -             entity,
45  -             player_pos,
46  -             transform.translation,
47  -             &mut distance_cache,
48  -         );
42  +         let distance_squared = get_cached_distance_squared(&mut distance_cache, entity, active_entity, transform.translation, player_pos);
    |

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/dynamic_content.rs:221:22
    |
221 |                 Some(road_network),
    |                 ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |                 |
    |                 arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/systems/world/dynamic_content.rs:221:17
    |
221 |                 Some(road_network),
    |                 ^^^^^------------^
    |                      |
    |                      this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/dynamic_content.rs:237:18
    |
237 |             Some(road_network),
    |             ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/systems/world/dynamic_content.rs:237:13
    |
237 |             Some(road_network),
    |             ^^^^^------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/dynamic_content.rs:252:18
    |
252 |             Some(road_network),
    |             ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/systems/world/dynamic_content.rs:252:13
    |
252 |             Some(road_network),
    |             ^^^^^------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/dynamic_content.rs:267:18
    |
267 |             Some(road_network),
    |             ---- ^^^^^^^^^^^^ expected `game_core::components::RoadNetwork`, found `RoadNetwork`
    |             |
    |             arguments to this enum variant are incorrect
    |
    = note: `RoadNetwork` and `game_core::components::RoadNetwork` have similar names, but are actually distinct types
note: `RoadNetwork` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:183:1
    |
183 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
note: `game_core::components::RoadNetwork` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:279:1
    |
279 | pub struct RoadNetwork {
    | ^^^^^^^^^^^^^^^^^^^^^^
help: the type constructed contains `&systems::world::road_network::RoadNetwork` due to the type of the argument passed
   --> gameplay_sim/src/systems/world/dynamic_content.rs:267:13
    |
267 |             Some(road_network),
    |             ^^^^^------------^
    |                  |
    |                  this argument influences the type of `Some`
note: tuple variant defined here
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/option.rs:580:5

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/road_mesh.rs:122:9
    |
121 |     match road.road_type {
    |           -------------- this expression has type `systems::world::road_network::RoadType`
122 |         RoadType::Highway => {
    |         ^^^^^^^^^^^^^^^^^ expected `systems::world::road_network::RoadType`, found `game_core::components::RoadType`
    |
    = note: `game_core::components::RoadType` and `systems::world::road_network::RoadType` have similar names, but are actually distinct types
note: `game_core::components::RoadType` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:248:1
    |
248 | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^
note: `systems::world::road_network::RoadType` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:15:1
    |
15  | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/road_mesh.rs:126:9
    |
121 |     match road.road_type {
    |           -------------- this expression has type `systems::world::road_network::RoadType`
...
126 |         RoadType::MainStreet => {
    |         ^^^^^^^^^^^^^^^^^^^^ expected `systems::world::road_network::RoadType`, found `game_core::components::RoadType`
    |
    = note: `game_core::components::RoadType` and `systems::world::road_network::RoadType` have similar names, but are actually distinct types
note: `game_core::components::RoadType` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:248:1
    |
248 | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^
note: `systems::world::road_network::RoadType` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:15:1
    |
15  | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/road_mesh.rs:129:9
    |
121 |     match road.road_type {
    |           -------------- this expression has type `systems::world::road_network::RoadType`
...
129 |         RoadType::SideStreet => {
    |         ^^^^^^^^^^^^^^^^^^^^ expected `systems::world::road_network::RoadType`, found `game_core::components::RoadType`
    |
    = note: `game_core::components::RoadType` and `systems::world::road_network::RoadType` have similar names, but are actually distinct types
note: `game_core::components::RoadType` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:248:1
    |
248 | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^
note: `systems::world::road_network::RoadType` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:15:1
    |
15  | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> gameplay_sim/src/systems/world/road_mesh.rs:132:9
    |
121 |     match road.road_type {
    |           -------------- this expression has type `systems::world::road_network::RoadType`
...
132 |         RoadType::Alley => {
    |         ^^^^^^^^^^^^^^^ expected `systems::world::road_network::RoadType`, found `game_core::components::RoadType`
    |
    = note: `game_core::components::RoadType` and `systems::world::road_network::RoadType` have similar names, but are actually distinct types
note: `game_core::components::RoadType` is defined in crate `game_core`
   --> /Users/bradyjeong/Documents/Projects/Amp/gta4/gta_game/game_core/src/components/world.rs:248:1
    |
248 | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^
note: `systems::world::road_network::RoadType` is defined in the current crate
   --> gameplay_sim/src/systems/world/road_network.rs:15:1
    |
15  | pub enum RoadType {
    | ^^^^^^^^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::EntityCommands::<'a>::despawn_recursive`: Use entity.despawn(), which now automatically despawns recursively.
   --> gameplay_sim/src/systems/world/map_system.rs:188:48
    |
188 |                 commands.entity(*chunk_entity).despawn_recursive();
    |                                                ^^^^^^^^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::EntityCommands::<'a>::despawn_recursive`: Use entity.despawn(), which now automatically despawns recursively.
   --> gameplay_sim/src/systems/world/unified_world.rs:200:41
    |
200 |                 commands.entity(entity).despawn_recursive();
    |                                         ^^^^^^^^^^^^^^^^^

warning: use of deprecated method `bevy::prelude::EntityCommands::<'a>::despawn_recursive`: Use entity.despawn(), which now automatically despawns recursively.
  --> gameplay_sim/src/systems/world/npc_spawn.rs:77:41
   |
77 |                 commands.entity(entity).despawn_recursive();
   |                                         ^^^^^^^^^^^^^^^^^

error[E0599]: no function or associated item named `with_config` found for struct `entity_factory::UnifiedEntityFactory` in the current scope
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:18:41
   |
18 |     let factory = UnifiedEntityFactory::with_config(config.clone());
   |                                         ^^^^^^^^^^^ function or associated item not found in `UnifiedEntityFactory`
   |
  ::: gameplay_sim/src/factories/entity_factory/mod.rs:15:1
   |
15 | pub struct UnifiedEntityFactory {
   | ------------------------------- function or associated item `with_config` not found for this struct
   |
note: if you're trying to build a new `entity_factory::UnifiedEntityFactory`, consider using `entity_factory::UnifiedEntityFactory::new` which returns `entity_factory::UnifiedEntityFactory`
  --> gameplay_sim/src/factories/entity_factory/mod.rs:28:5
   |
28 |     pub fn new() -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:36:58
   |
36 |         let (buildings, vehicles, npcs, trees) = factory.entity_limits.get_counts();
   |                                                          ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:46:32
   |
46 |             buildings, factory.entity_limits.max_buildings, 
   |                                ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:47:41
   |
47 |             (buildings as f32 / factory.entity_limits.max_buildings as f32) * 100.0,
   |                                         ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:48:31
   |
48 |             vehicles, factory.entity_limits.max_vehicles,
   |                               ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:49:40
   |
49 |             (vehicles as f32 / factory.entity_limits.max_vehicles as f32) * 100.0,
   |                                        ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:50:27
   |
50 |             npcs, factory.entity_limits.max_npcs,
   |                           ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:51:36
   |
51 |             (npcs as f32 / factory.entity_limits.max_npcs as f32) * 100.0,
   |                                    ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:52:28
   |
52 |             trees, factory.entity_limits.max_trees,
   |                            ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `entity_limits` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:53:37
   |
53 |             (trees as f32 / factory.entity_limits.max_trees as f32) * 100.0,
   |                                     ^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0609]: no field `position_cache` on type `bevy::prelude::Res<'_, entity_factory::UnifiedEntityFactory>`
  --> gameplay_sim/src/systems/world/unified_factory_setup.rs:54:21
   |
54 |             factory.position_cache.len()
   |                     ^^^^^^^^^^^^^^ unknown field
   |
   = note: available field is: `limit_manager`

error[E0560]: struct `bevy::prelude::StandardMaterial` has no field named `roughness`
  --> gameplay_sim/src/systems/water.rs:50:13
   |
50 |             roughness: 0.1,
   |             ^^^^^^^^^ `bevy::prelude::StandardMaterial` does not have this field
   |
   = note: available fields are: `base_color_channel`, `base_color_texture`, `emissive`, `emissive_exposure_weight`, `emissive_channel` ... and 34 others

error[E0599]: no method named `find_nearest_point` found for reference `&game_core::components::RoadNetwork` in the current scope
  --> gameplay_sim/src/factories/entity_factory/validation.rs:42:18
   |
42 |     road_network.find_nearest_point(position).distance(position) < tolerance
   |                  ^^^^^^^^^^^^^^^^^^ method not found in `&RoadNetwork`

error[E0308]: mismatched types
   --> gameplay_sim/src/factories/generic_bundle.rs:148:20
    |
148 |             scale: 1.0,
    |                    ^^^ expected `Vec3`, found floating-point number

warning: unused import: `crate::bevy16_compat::EntityCommandsExt`
  --> gameplay_sim/src/systems/world/npc_spawn.rs:11:5
   |
11 | use crate::bevy16_compat::EntityCommandsExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::bevy16_compat::EntityCommandsExt`
  --> gameplay_sim/src/systems/world/unified_world.rs:11:5
   |
11 | use crate::bevy16_compat::EntityCommandsExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::bevy16_compat::QueryExt`
 --> gameplay_sim/src/systems/human_behavior.rs:4:5
  |
4 | use crate::bevy16_compat::QueryExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::bevy16_compat::EntityCommandsExt`
  --> gameplay_sim/src/systems/world/map_system.rs:11:5
   |
11 | use crate::bevy16_compat::EntityCommandsExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::bevy16_compat::QueryExt`
 --> gameplay_sim/src/systems/interaction.rs:4:5
  |
4 | use crate::bevy16_compat::QueryExt;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: value assigned to `target_linear_velocity` is never read
  --> gameplay_sim/src/movement/player.rs:51:13
   |
51 |     let mut target_linear_velocity = Vec3::ZERO;
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: maybe it is overwritten before being read?
   = note: `#[warn(unused_assignments)]` on by default

error[E0507]: cannot move out of `*road_type1` which is behind a shared reference
   --> gameplay_sim/src/world/layered_generation.rs:355:9
    |
355 |         *road_type1
    |         ^^^^^^^^^^^ move occurs because `*road_type1` has type `systems::world::road_network::RoadType`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
355 -         *road_type1
355 +         road_type1.clone()
    |

error[E0507]: cannot move out of `*road_type2` which is behind a shared reference
   --> gameplay_sim/src/world/layered_generation.rs:357:9
    |
357 |         *road_type2
    |         ^^^^^^^^^^^ move occurs because `*road_type2` has type `systems::world::road_network::RoadType`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
357 -         *road_type2
357 +         road_type2.clone()
    |

warning: variable does not need to be mutable
  --> gameplay_sim/src/bevy16_compat.rs:14:13
   |
14 |         let mut mesh = Mesh::new(PrimitiveTopology::TriangleList, bevy::render::render_asset::RenderAssetUsages::default());
   |             ----^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: unreachable pattern
   --> gameplay_sim/src/systems/input/input_manager.rs:117:13
    |
117 |             _ => {}
    |             ^ no value can reach this
    |
note: multiple earlier patterns match some of the same values
   --> gameplay_sim/src/systems/input/input_manager.rs:117:13
    |
90  |             GameState::Walking => {
    |             ------------------ matches some of the same values
...
101 |             GameState::Driving => {
    |             ------------------ matches some of the same values
...
104 |             GameState::Flying => {
    |             ----------------- matches some of the same values
...
108 |             GameState::Jetting => {
    |             ------------------ matches some of the same values
...
117 |             _ => {}
    |             ^ collectively making this unreachable
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unreachable pattern
   --> gameplay_sim/src/systems/input/input_manager.rs:264:9
    |
264 |         _ => {}
    |         ^ no value can reach this
    |
note: multiple earlier patterns match some of the same values
   --> gameplay_sim/src/systems/input/input_manager.rs:264:9
    |
237 |         GameState::Walking => {
    |         ------------------ matches some of the same values
...
244 |         GameState::Driving => {
    |         ------------------ matches some of the same values
...
247 |         GameState::Flying => {
    |         ----------------- matches some of the same values
...
251 |         GameState::Jetting => {
    |         ------------------ matches some of the same values
...
264 |         _ => {}
    |         ^ collectively making this unreachable

warning: variable does not need to be mutable
   --> gameplay_sim/src/systems/input/control_manager.rs:355:5
    |
355 |     mut control_manager: ResMut<ControlManager>,
    |     ----^^^^^^^^^^^^^^^
    |     |
    |     help: remove this `mut`

warning: unused variable: `transform`
   --> gameplay_sim/src/systems/input/control_manager.rs:384:18
    |
384 |     for (entity, transform) in npc_query.iter() {
    |                  ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transform`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `player_entity`
  --> gameplay_sim/src/systems/interaction.rs:24:24
   |
24 |             if let Ok((player_entity, player_transform)) = player_query.get_single() {
   |                        ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_player_entity`

warning: unused variable: `player_transform`
  --> gameplay_sim/src/systems/interaction.rs:66:51
   |
66 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                                   ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_player_transform`

warning: unused variable: `player_transform`
  --> gameplay_sim/src/systems/interaction.rs:81:51
   |
81 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                                   ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_player_transform`

warning: unused variable: `player_transform`
  --> gameplay_sim/src/systems/interaction.rs:96:51
   |
96 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                                   ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_player_transform`

warning: variable does not need to be mutable
  --> gameplay_sim/src/systems/interaction.rs:66:47
   |
66 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                               ----^^^^^^^^^^^^^^^^
   |                                               |
   |                                               help: remove this `mut`

warning: variable does not need to be mutable
  --> gameplay_sim/src/systems/interaction.rs:81:47
   |
81 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                               ----^^^^^^^^^^^^^^^^
   |                                               |
   |                                               help: remove this `mut`

warning: variable does not need to be mutable
  --> gameplay_sim/src/systems/interaction.rs:96:47
   |
96 |                     if let Ok((player_entity, mut player_transform)) = player_query.get_single() {
   |                                               ----^^^^^^^^^^^^^^^^
   |                                               |
   |                                               help: remove this `mut`

warning: value assigned to `target_linear_velocity` is never read
  --> gameplay_sim/src/systems/movement/player.rs:48:13
   |
48 |     let mut target_linear_velocity = Vec3::ZERO;
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
   --> gameplay_sim/src/systems/world/npc.rs:110:39
    |
110 |     for (mut transform, mut velocity, mut npc, cullable) in npc_query.iter_mut() {
    |                                       ----^^^
    |                                       |
    |                                       help: remove this `mut`

warning: unused variable: `road_length`
   --> gameplay_sim/src/systems/world/road_mesh.rs:278:9
    |
278 |     let road_length = road.length();
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_road_length`

warning: variable does not need to be mutable
  --> gameplay_sim/src/systems/world/road_generation.rs:38:19
   |
38 |         if let Ok(mut cache) = self.get_generation_cache() {
   |                   ----^^^^^
   |                   |
   |                   help: remove this `mut`

warning: unused variable: `commands`
  --> gameplay_sim/src/systems/world/layered_generation.rs:53:9
   |
53 |     mut commands: Commands,
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_commands`

warning: variable does not need to be mutable
  --> gameplay_sim/src/systems/world/layered_generation.rs:53:5
   |
53 |     mut commands: Commands,
   |     ----^^^^^^^^
   |     |
   |     help: remove this `mut`

warning: unused variable: `coord`
   --> gameplay_sim/src/systems/world/layered_generation.rs:110:24
    |
110 | fn has_roads_generated(coord: ChunkCoord) -> bool {
    |                        ^^^^^ help: if this is intentional, prefix it with an underscore: `_coord`

warning: unused variable: `coord`
   --> gameplay_sim/src/systems/world/layered_generation.rs:161:28
    |
161 | fn has_buildings_generated(coord: ChunkCoord) -> bool {
    |                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_coord`

warning: unused variable: `coord`
   --> gameplay_sim/src/systems/world/layered_generation.rs:214:29
    |
214 | fn has_vegetation_generated(coord: ChunkCoord) -> bool {
    |                             ^^^^^ help: if this is intentional, prefix it with an underscore: `_coord`

warning: unused variable: `commands`
  --> gameplay_sim/src/systems/world/unified_lod.rs:89:9
   |
89 |     mut commands: Commands,
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_commands`

warning: unused variable: `time`
  --> gameplay_sim/src/systems/world/unified_lod.rs:93:5
   |
93 |     time: Res<Time>,
   |     ^^^^ help: if this is intentional, prefix it with an underscore: `_time`

warning: variable does not need to be mutable
  --> gameplay_sim/src/systems/world/unified_lod.rs:89:5
   |
89 |     mut commands: Commands,
   |     ----^^^^^^^^
   |     |
   |     help: remove this `mut`

error[E0502]: cannot borrow `lod_coordinator` as immutable because it is also borrowed as mutable
   --> gameplay_sim/src/systems/world/unified_lod.rs:111:17
    |
109 |             let distance = lod_coordinator.distance_cache.get_distance(
    |                            ---------------                ------------ mutable borrow later used by call
    |                            |
    |                            mutable borrow occurs here
110 |                 entity,
111 |                 lod_coordinator.frame_counter.frame,
    |                 ^^^^^^^^^^^^^^^ immutable borrow occurs here

warning: unused variable: `entity`
  --> gameplay_sim/src/systems/world/npc_lod.rs:46:14
   |
46 |         for (entity, mut npc_state, transform, mut visibility) in npc_query.iter_mut() {
   |              ^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity`

warning: unused variable: `game_config`
  --> gameplay_sim/src/systems/world/npc_spawn.rs:23:5
   |
23 |     game_config: Res<GameConfig>,
   |     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_game_config`

warning: unused variable: `entity`
  --> gameplay_sim/src/systems/world/vegetation_lod.rs:61:14
   |
61 |         for (entity, mut veg_lod, transform, mut visibility) in vegetation_query.iter_mut() {
   |              ^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity`

warning: unused variable: `meshes`
   --> gameplay_sim/src/systems/world/vegetation_lod.rs:114:9
    |
114 |     mut meshes: ResMut<Assets<Mesh>>,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_meshes`

warning: unused variable: `materials`
   --> gameplay_sim/src/systems/world/vegetation_lod.rs:115:9
    |
115 |     mut materials: ResMut<Assets<StandardMaterial>>,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_materials`

warning: variable does not need to be mutable
   --> gameplay_sim/src/systems/world/vegetation_lod.rs:114:5
    |
114 |     mut meshes: ResMut<Assets<Mesh>>,
    |     ----^^^^^^
    |     |
    |     help: remove this `mut`

warning: variable does not need to be mutable
   --> gameplay_sim/src/systems/world/vegetation_lod.rs:115:5
    |
115 |     mut materials: ResMut<Assets<StandardMaterial>>,
    |     ----^^^^^^^^^
    |     |
    |     help: remove this `mut`

warning: unused variable: `time`
  --> gameplay_sim/src/systems/world/unified_distance_culling.rs:72:5
   |
72 |     time: Res<Time>,
   |     ^^^^ help: if this is intentional, prefix it with an underscore: `_time`

warning: unused variable: `entity`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:123:10
    |
123 |     for (entity, cullable, vehicle_state) in vehicle_query.iter() {
    |          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity`

warning: unused variable: `vehicle_state`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:123:28
    |
123 |     for (entity, cullable, vehicle_state) in vehicle_query.iter() {
    |                            ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_vehicle_state`

warning: unused variable: `target_lod`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:125:13
    |
125 |         let target_lod = if cullable.last_distance < 100.0 {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_lod`

warning: unused variable: `entity`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:141:10
    |
141 |     for (entity, cullable) in building_query.iter() {
    |          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity`

warning: unused variable: `target_lod`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:143:13
    |
143 |         let target_lod = calculate_building_lod(cullable.last_distance);
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_lod`

warning: unused variable: `entity`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:152:10
    |
152 |     for (entity, cullable) in npc_query.iter() {
    |          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity`

warning: unused variable: `target_lod`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:154:13
    |
154 |         let target_lod = if cullable.last_distance < 50.0 {
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_lod`

warning: unused variable: `active_pos`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:228:13
    |
228 |         let active_pos = active_transform.translation;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_active_pos`

warning: unused variable: `cleanup_distance`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:229:13
    |
229 |         let cleanup_distance = 2000.0; // Very conservative cleanup distance
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cleanup_distance`

warning: unused variable: `entity`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:231:13
    |
231 |         for entity in cullable_query.iter() {
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity`

warning: unused variable: `commands`
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:223:9
    |
223 |     mut commands: Commands,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_commands`

warning: variable does not need to be mutable
   --> gameplay_sim/src/systems/world/unified_distance_culling.rs:223:5
    |
223 |     mut commands: Commands,
    |     ----^^^^^^^^
    |     |
    |     help: remove this `mut`

Some errors have detailed explanations: E0026, E0027, E0061, E0277, E0308, E0369, E0412, E0422, E0423...
For more information about an error, try `rustc --explain E0026`.
warning: `gameplay_sim` (lib) generated 145 warnings
error: could not compile `gameplay_sim` (lib) due to 296 previous errors; 145 warnings emitted
